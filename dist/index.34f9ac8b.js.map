{"mappings":"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","sources":["<anon>","js/script.js","js/App.js","js/UINotification.js","js/models/Settings.js","js/Event.js","js/Dom.js","js/Sidebar.js","js/debounce.js","js/models/Chat.js","js/models/BaseModel.js","js/Database.js","js/Migrations.js","js/models/ChatMessage.js","js/ModelsList.js","js/FilteredList.js","js/List.js","js/UIElement.js","js/DOM.js","js/models/Models.js","js/OllamaApi.js","js/AppController.js","js/ChatList.js","js/ChatListItem.js","js/DragAndDrop.js","js/DownloadChatsButton.js","js/models/LocalStorage.js","js/CopyButton.js","js/DownloadButton.js","js/DropDownMenu.js","js/SettingsDialog.js","js/Modal.js","js/ChatSettingsDialog.js","js/ChatArea.js","js/AtSymbolListener.js","js/ExportChat.js","js/Hoverable.js","js/ChatTitle.js","js/ChatForm.js"],"sourcesContent":["(function () {\nfunction $d0e57ac33ccf02ae$var$simpleHash(str) {\n    let hash = 0;\n    for(let i = 0; i < str.length; i++){\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n}\nclass $d0e57ac33ccf02ae$export$93fa2dff72ea7b22 {\n    constructor(message, type, autoDismiss){\n        const id = $d0e57ac33ccf02ae$var$simpleHash(JSON.stringify(message));\n        this.type = type;\n        this.domId = `notification-${id}`;\n        this.container = document.body;\n        this.template = document.getElementById(\"notification-template\").content;\n        this._bindEventListeners();\n        if (autoDismiss) this.autoDismiss();\n    }\n    _bindEventListeners() {\n        window.addEventListener(\"keydown\", (event)=>{\n            if (event.key === \"Escape\") this.hide();\n        });\n    }\n    autoDismiss() {\n        setTimeout(()=>{\n            this.hide();\n        }, 2000); // 2000 milliseconds (2 seconds)\n    }\n    static show(message, type) {\n        const notification = new $d0e57ac33ccf02ae$export$93fa2dff72ea7b22(message, type);\n        notification.show(message);\n        return notification;\n    }\n    static initialize() {\n        // Store the original console.error function\n        const originalConsoleError = console.error;\n        // Override console.error\n        console.error = function(...args) {\n            $d0e57ac33ccf02ae$export$93fa2dff72ea7b22.show(args);\n            // Call the original console.error with all arguments\n            originalConsoleError.apply(console, args);\n        };\n    }\n    static handleApplicationError(error) {\n        console.debug(\"caught error\");\n        console.error(error);\n        $d0e57ac33ccf02ae$export$93fa2dff72ea7b22.show(error);\n    }\n    show(message) {\n        // Clone the template\n        const clone = this.template.cloneNode(true);\n        // Find the root element of the notification in the clone\n        const notificationElement = clone.querySelector(\".notification\");\n        if (!notificationElement) {\n            console.error(\"Notification root element not found in template\");\n            return;\n        }\n        // Set the message\n        clone.querySelector(\".notification-message\").textContent = message;\n        notificationElement.id = this.domId; // Set ID on the actual element, not the fragment\n        // Add type, for example, error\n        if (this.type) notificationElement.classList.add(`notification-${this.type}`);\n        // Add close functionality\n        const closeButton = clone.querySelector(\".close-notification-button\");\n        closeButton.onclick = ()=>this.hide();\n        // Don't show the same notification twice\n        if (!document.getElementById(this.domId)) // Append to the container and display\n        this.container.appendChild(clone);\n    }\n    hide() {\n        document.getElementById(this.domId)?.remove();\n    }\n}\n\n\nclass $6cafd1d766934ced$export$c72f6eaae7b9adff {\n    // Static method to set a value in localStorage\n    static set(key, value) {\n        try {\n            const stringValue = JSON.stringify(value);\n            localStorage.setItem(key, stringValue);\n        } catch (e) {\n            console.error(\"Error saving to localStorage\", e);\n        }\n    }\n    // Static method to get a value from localStorage\n    static get(key, defaultValue = null) {\n        try {\n            const value = localStorage.getItem(key);\n            return value !== null ? JSON.parse(value) : defaultValue;\n        } catch (e) {\n            console.error(\"Error reading from localStorage\", e);\n            return defaultValue;\n        }\n    }\n    // Static method to remove a value from localStorage\n    static remove(key) {\n        try {\n            localStorage.removeItem(key);\n        } catch (e) {\n            console.error(\"Error removing from localStorage\", e);\n        }\n    }\n    static getUrl(uri) {\n        try {\n            const baseUrl = $6cafd1d766934ced$export$c72f6eaae7b9adff.get(\"url\");\n            if (uri) return new URL(uri, baseUrl).href;\n            else return baseUrl;\n        } catch (error) {\n            return null;\n        }\n    }\n    static setUrl(url) {\n        $6cafd1d766934ced$export$c72f6eaae7b9adff.set(\"url\", url);\n    }\n    static getModel() {\n        return $6cafd1d766934ced$export$c72f6eaae7b9adff.get(\"model\");\n    }\n    static setModel(model) {\n        $6cafd1d766934ced$export$c72f6eaae7b9adff.set(\"model\", model);\n    }\n    static getSystemPrompt() {\n        return $6cafd1d766934ced$export$c72f6eaae7b9adff.get(\"system-prompt\");\n    }\n    static setSystemPrompt(systemPrompt) {\n        if (systemPrompt === \"\") systemPrompt = null;\n        $6cafd1d766934ced$export$c72f6eaae7b9adff.set(\"system-prompt\", systemPrompt);\n    }\n    static getModelParameters() {\n        return $6cafd1d766934ced$export$c72f6eaae7b9adff.get(\"model-parameters\");\n    }\n    static setModelParameters(modelParameters) {\n        if (modelParameters === \"\") modelParameters = null;\n        $6cafd1d766934ced$export$c72f6eaae7b9adff.set(\"model-parameters\", modelParameters);\n    }\n    static getCurrentChatId() {\n        return $6cafd1d766934ced$export$c72f6eaae7b9adff.get(\"currentChatId\");\n    }\n    static setCurrentChatId(chatId) {\n        if (chatId === undefined) chatId = null;\n        $6cafd1d766934ced$export$c72f6eaae7b9adff.set(\"currentChatId\", chatId);\n    }\n}\n\n\nclass $89906307e103a6a0$export$d61e24a684f9e51 {\n    static listen(eventName, handler, target) {\n        if (target === null || target === undefined) target = window;\n        target.addEventListener(eventName, (event)=>{\n            handler(event.detail);\n        });\n    }\n    static emit(eventName, data, target) {\n        if (target === null || target === undefined) target = window;\n        let log = `${eventName}`;\n        if (data?.id) log += ` id: ${data.id}`;\n        console.log(log);\n        const event = new CustomEvent(eventName, {\n            detail: data || {},\n            bubbles: true\n        });\n        target.dispatchEvent(event);\n    }\n}\n\n\nclass $9bf0ffc1f90fef06$export$cb0933279c36a66b {\n    static showElement(element) {\n        element.classList.remove(\"hidden\");\n        return this;\n    }\n    static hideElement(element) {\n        element.classList.add(\"hidden\");\n        return this;\n    }\n    static enableInput(element) {\n        element.removeAttribute(\"disabled\");\n        return this;\n    }\n    static disableInput(element) {\n        element.setAttribute(\"disabled\", \"disabled\");\n        return this;\n    }\n}\n\n\nfunction $e3da2d8b324ccdd6$export$61fc7d43ac8f84b0(func, wait) {\n    let timeout;\n    return function funcWrapper(...args) {\n        const later = ()=>{\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n\n\nclass $4a7df9533fb2e685$export$6feb5ea51a7b0b47 {\n    constructor(dbName, objectStores, migrations){\n        this.dbName = dbName;\n        this.objectStores = objectStores;\n        this.dbConnection = null; // Initialized in open\n        this.migrations = migrations;\n    }\n    async open() {\n        if (this.dbConnection) throw new Error(\"Connection already open\");\n        return new Promise((resolve, reject)=>{\n            const request = indexedDB.open(this.dbName, this.migrations.version);\n            request.onerror = (event)=>reject(event.target.error);\n            request.onupgradeneeded = (event)=>{\n                const db = event.target.result;\n                const transaction = event.currentTarget.transaction;\n                this.migrations.upgrade(db, transaction, event.oldVersion);\n            };\n            request.onsuccess = (event)=>{\n                this.dbConnection = event.target.result;\n                resolve(this.dbConnection);\n            };\n        });\n    }\n    async transaction(storeName, mode) {\n        return this.dbConnection.transaction([\n            storeName\n        ], mode).objectStore(storeName);\n    }\n    async add(storeName, data) {\n        const store = await this.transaction(storeName, \"readwrite\");\n        return this.handleRequest(\"add\", store.add(data));\n    }\n    async get(storeName, id) {\n        const store = await this.transaction(storeName, \"readonly\");\n        return this.handleRequest(\"get\", store.get(id));\n    }\n    async put(storeName, data) {\n        const store = await this.transaction(storeName, \"readwrite\");\n        return this.handleRequest(\"put\", store.put(data));\n    }\n    async delete(storeName, id) {\n        const store = await this.transaction(storeName, \"readwrite\");\n        return this.handleRequest(\"delete\", store.delete(id));\n    }\n    async getAll(storeName) {\n        const store = await this.transaction(storeName, \"readwrite\");\n        return this.handleRequest(\"getAll\", store.getAll());\n    }\n    async clear(storeName) {\n        const store = await this.transaction(storeName, \"readwrite\");\n        return this.handleRequest(\"deleteAll\", store.clear());\n    }\n    handleRequest(type, request) {\n        return new Promise((resolve, reject)=>{\n            request.onsuccess = ()=>resolve(request.result);\n            request.onerror = (event)=>{\n                const error = `Database ${type} operation failed: ${event.target.error.message}`;\n                reject(new Error(JSON.stringify(error)));\n            };\n        });\n    }\n}\n\n\nclass $3cac27d4071b6d87$export$22a13653582ad32a {\n    static version = 2;\n    static upgrade(database, transaction, oldVersion) {\n        console.debug(`Migration needed. Old version ${oldVersion}. New version ${this.version}.`);\n        const funcName = `upgradeToVersion${this.version}`;\n        const upgradeFunc = this[funcName];\n        if (!upgradeFunc) throw new Error(`Upgrade function missing for ${funcName}`);\n        if (this.version >= oldVersion) upgradeFunc({\n            database: database,\n            transaction: transaction\n        });\n    }\n    static upgradeToVersion2(context) {\n        // Create chats\n        context.database.createObjectStore(\"chats\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n        // Create chat_messages\n        const chatMessages = context.database.createObjectStore(\"chat_messages\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n        chatMessages.createIndex(\"by_chat\", \"chatId\", {\n            unique: false\n        });\n    }\n}\n\n\nclass $39c6f0c30d166321$export$d12e20a4eec10acf {\n    constructor(data){\n        Object.assign(this, data);\n    }\n    async create() {\n        const key = await this.constructor.db.add(this.constructor.storeName, this);\n        if (!this.id) this.id = key;\n        return this;\n    }\n    async save() {\n        return await this.constructor.db.put(this.constructor.storeName, this);\n    }\n    async delete() {\n        return await this.constructor.db.delete(this.constructor.storeName, this.id);\n    }\n    jsonify() {\n        return JSON.stringify(this);\n    }\n    static async database(name, store) {\n        this.dbName = name;\n        this.storeName = store;\n        this.db = new (0, $4a7df9533fb2e685$export$6feb5ea51a7b0b47)(name, [\n            store\n        ], (0, $3cac27d4071b6d87$export$22a13653582ad32a));\n        await this.db.open();\n    }\n    static async transaction(mode) {\n        return await this.db.transaction(this.storeName, mode);\n    }\n    async transaction(mode) {\n        return await this.constructor.transaction(mode);\n    }\n    static async get(id) {\n        const data = await this.db.get(this.storeName, id);\n        return new this(data);\n    }\n    static async clear() {\n        return await this.db.clear(this.storeName);\n    }\n    // TODO: sorting and selecting only certain attributes\n    static async getAll() {\n        const records = await this.db.getAll(this.storeName);\n        return records.map((data)=>new this(data));\n    }\n    /**\n   * Retrieves all objects associated with a given ID and index.\n   *\n   * @param {number|string} chatId - The ID of the chat.\n   * @returns {Promise<Array>} A promise that resolves to an array.\n   */ static async getAllByIndexAndId(indexName, id) {\n        // Open a transaction and access the messages store\n        const transaction = await this.transaction(\"readonly\");\n        // Use an index to find objects with the specified id\n        const index = transaction.index(indexName);\n        const request = index.getAll(id);\n        return new Promise((resolve, reject)=>{\n            request.onsuccess = ()=>{\n                // Convert the result into instances\n                const messages = request.result.map((data)=>new this(data));\n                resolve(messages);\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    // Exports the whole store\n    static async export() {\n        let transaction = await this.db.transaction(this.storeName, \"readonly\");\n        let store = await transaction.transaction.objectStore(this.storeName);\n        return store.getAll();\n    }\n}\n\n\n\nclass $a1d4810cc36cac20$export$423c13fd52bec8ad extends (0, $39c6f0c30d166321$export$d12e20a4eec10acf) {\n    static async initialize() {\n        await this.database(\"ChatApp\", \"chat_messages\");\n    }\n    static async getAllByChatId(chatId) {\n        return this.getAllByIndexAndId(\"by_chat\", chatId);\n    }\n}\n\n\nclass $0674bb6c85f30ef2$export$d49dffca20dba6f7 extends (0, $39c6f0c30d166321$export$d12e20a4eec10acf) {\n    async addMessage(data) {\n        data.chatId = this.id;\n        return await new (0, $a1d4810cc36cac20$export$423c13fd52bec8ad)(data).create();\n    }\n    async getMessages() {\n        const messages = await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).getAllByChatId(this.id);\n        this.messages = messages;\n        return this.messages;\n    }\n    static async initialize() {\n        await this.database(\"ChatApp\", [\n            \"chats\"\n        ]);\n    }\n    static async clear() {\n        await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).clear();\n        await super.clear();\n    }\n    static async get(id) {\n        const chat = await super.get(id);\n        /*\n    if (chat) {\n      // Fetch all messages for this chat\n      const messages = await ChatMessage.getAllByChatId(id);\n      chat.messages = messages;\n    }\n    */ return chat;\n    }\n    static async delete(id) {\n        // Delete the chat instance\n        await super.delete(id);\n        // Delete all associated messages\n        const messages = await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).getAllByChatId(id);\n        for (const message of messages)await message.delete();\n    }\n}\n\n\n\nclass $1c3172bb839daffe$export$cb0933279c36a66b {\n    static showElement(element) {\n        element.classList.remove(\"hidden\");\n        return this;\n    }\n    static hideElement(element) {\n        element.classList.add(\"hidden\");\n        return this;\n    }\n    static enableInput(element) {\n        element.removeAttribute(\"disabled\");\n        return this;\n    }\n    static disableInput(element) {\n        element.setAttribute(\"disabled\", \"disabled\");\n        return this;\n    }\n}\n\n\nclass $887ebe369d7e1bd0$export$f03163d7279986d4 {\n    constructor(element){\n        this.element = element;\n    }\n    show() {\n        (0, $1c3172bb839daffe$export$cb0933279c36a66b).showElement(this.element);\n    }\n    hide() {\n        (0, $1c3172bb839daffe$export$cb0933279c36a66b).hideElement(this.element);\n    }\n}\n\n\nclass $c93941a806f63188$export$54c2e3dc7acea9f5 extends (0, $887ebe369d7e1bd0$export$f03163d7279986d4) {\n    constructor(ul, items){\n        super(ul);\n        this.ul = ul;\n        this.items = items;\n        this.render();\n        this.clickHandler = null;\n        this.ul.classList.add(\"list\");\n    }\n    onClick(handler) {\n        this.clickHandler = handler;\n        return this; // Allow chaining\n    }\n    setItems(items) {\n        this.items = items;\n        this.render();\n    }\n    setSelected(selected) {\n        console.debug(`Select ${selected}`);\n        this.selected = selected;\n        this.li.forEach((item)=>{\n            if (item.textContent === selected) item.classList.add(\"selected\");\n            else item.classList.remove(\"selected\");\n        });\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"select\", selected, this.ul);\n    }\n    getSelected() {\n        return this.selected;\n    }\n    render() {\n        this.ul.innerHTML = \"\"; // Clear existing content\n        this.li = this.items.map((item)=>{\n            const li = document.createElement(\"li\");\n            li.classList.add(\"list-item\");\n            if (item === this.selected) li.classList.add(\"selected\");\n            li.textContent = item;\n            li.item = item;\n            li.addEventListener(\"click\", ()=>{\n                this.setSelected(item);\n                if (this.clickHandler) this.clickHandler(item);\n            });\n            this.ul.appendChild(li);\n            return li;\n        });\n    }\n}\n\n\n\nclass $ddab77ee5f79370a$export$4425cedb09601f99 extends (0, $c93941a806f63188$export$54c2e3dc7acea9f5) {\n    constructor(ul, items){\n        super(ul, items); // Call the constructor of the parent class\n        this.div = document.createElement(\"small\");\n        this.div.classList.add(\"hidden\", \"p-2\");\n        this.ul.prepend(this.div);\n        this.query = null;\n    }\n    escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // Escapes special characters\n    }\n    render() {\n        super.render();\n    }\n    /*\n  selectFirst() {\n    const select = document.querySelector(\n      '#chat-model .chat-model-list li:not(.hidden)',\n    )?.textContent;\n    this.setSelected(select);\n  }\n  */ filter(searchTerm) {\n        this.query = searchTerm;\n        if (searchTerm === null || searchTerm === undefined) {\n            this.clearFilter();\n            this.filtered = false;\n            return null;\n        }\n        const query = this.escapeRegExp(searchTerm).replace(/\\s+/g, \".*\");\n        const regex = new RegExp(query, \"i\"); // 'i' for case-insensitive matching\n        // Loop through the list items\n        const matches = this.li.map((listItemElement)=>{\n            const text = listItemElement.textContent;\n            const match = regex.test(text);\n            if (match) {\n                (0, $1c3172bb839daffe$export$cb0933279c36a66b).showElement(listItemElement);\n                return text;\n            } else {\n                (0, $1c3172bb839daffe$export$cb0933279c36a66b).hideElement(listItemElement);\n                return null;\n            }\n        }).filter((match)=>match);\n        console.log(`Search ${query}. Matches: ${matches}`);\n        // Update text\n        (0, $1c3172bb839daffe$export$cb0933279c36a66b).showElement(this.div);\n        let message = null;\n        if (searchTerm.length < 1) message = `Continue typing to search models. Showing all models:`;\n        else if (matches.length != 0) message = `Found ${matches.length} model(s) matching '${this.query}'. Click to change chat's model, or press tab to change prompt's model:`;\n        else message = `Did not find any models that match '${this.query}'.`;\n        this.div.textContent = message;\n        return matches;\n    }\n    clearFilter() {\n        (0, $1c3172bb839daffe$export$cb0933279c36a66b).hideElement(this.div);\n        this.query = null;\n        this.li.forEach((listItemElement)=>{\n            (0, $1c3172bb839daffe$export$cb0933279c36a66b).showElement(listItemElement);\n        });\n    }\n}\n\n\n\n\n\nclass $22a7c45da799ce5c$export$819c9b9e02ecbeb9 {\n    constructor(){\n        this.abortController = null;\n    }\n    async makeRequest(chat, model, userMessage, systemPrompt, modelParameters) {\n        const requestData = {\n            prompt: userMessage,\n            model: model,\n            messages: (await chat.getMessages()).map((message)=>({\n                    role: message.role,\n                    content: message.content\n                }))\n        };\n        // Add system prompt\n        if (systemPrompt) requestData.system = systemPrompt;\n        // Add model parameters\n        if (modelParameters) requestData.options = modelParameters;\n        return requestData;\n    }\n    async send(url, data, onResponse, onError, onDone) {\n        const request = {\n            data: data\n        };\n        try {\n            const response = await this.postChatMessage(url, data);\n            await this.handleResponse(request, response, onResponse, onDone);\n        } catch (error) {\n            onError(request, error);\n        }\n    }\n    async postChatMessage(url, data) {\n        this.abortController = new AbortController();\n        const { signal: signal } = this.abortController;\n        const response = await fetch(url, {\n            signal: signal,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) throw new Error(`${url} failed with status ${response.status}`);\n        return response;\n    }\n    async handleResponse(request, response, onResponse, onDone) {\n        const reader = response.body.getReader();\n        let partialLine = \"\";\n        var isRequestDone = false;\n        while(!isRequestDone){\n            const { done: done, value: value } = await reader.read();\n            if (done) {\n                onDone(request, response);\n                isRequestDone = true;\n                continue;\n            }\n            const textChunk = new TextDecoder().decode(value);\n            const lines = (partialLine + textChunk).split(\"\\n\");\n            partialLine = lines.pop();\n            lines.forEach((line)=>{\n                const responseData = JSON.parse(line);\n                if (line.trim()) {\n                    // TODO: Move this line:\n                    this.printResponseStats(responseData);\n                    onResponse(request, responseData.message.content);\n                }\n            });\n        }\n        if (partialLine.trim()) onResponse(request, partialLine);\n    }\n    abort() {\n        if (this.abortController) this.abortController.abort();\n    }\n    printResponseStats(data) {\n        if (!data.total_duration) return;\n        // Convert nanoseconds to seconds for durations\n        const totalDurationInSeconds = data.total_duration / 1e9;\n        const loadDurationInSeconds = data.load_duration / 1e9;\n        const promptEvalDurationInSeconds = data.prompt_eval_duration / 1e9;\n        const responseEvalDurationInSeconds = data.eval_duration / 1e9;\n        // Calculate tokens per second (token/s)\n        const tokensPerSecond = data.eval_count / responseEvalDurationInSeconds;\n        const output = `\nModel: ${data.model}\nCreated At: ${data.created_at}\nTotal Duration (s): ${totalDurationInSeconds.toFixed(2)}\nLoad Duration (s): ${loadDurationInSeconds.toFixed(2)}\nPrompt Evaluation Count: ${data.prompt_eval_count}\nPrompt Evaluation Duration (s): ${promptEvalDurationInSeconds.toFixed(2)}\nResponse Evaluation Count: ${data.eval_count}\nResponse Evaluation Duration (s): ${responseEvalDurationInSeconds.toFixed(2)}\nTokens Per Second: ${tokensPerSecond.toFixed(2)} token/s\n    `;\n        console.log(output);\n    }\n    static getModels(url, onResponse) {\n        if (!url) return null;\n        return fetch(url).then((response)=>{\n            if (!response.ok) throw new Error(`Unable to fetch models from ${url}`);\n            return response.json();\n        }).then((data)=>{\n            onResponse(data.models);\n        }).catch((error)=>{\n            console.debug(error);\n            console.error(`Please ensure the server is running at: ${url}. Error code: 39847`);\n            onResponse([]);\n        });\n    }\n}\n\n\nclass $32aa79be08c85114$export$6edbc060ce567afa {\n    // TODO: Get this from the settings?\n    static models = [];\n    static getUrl() {\n        return (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getUrl(\"/api/tags\");\n    }\n    static load() {\n        if (!this.getUrl()) return null;\n        return (0, $22a7c45da799ce5c$export$819c9b9e02ecbeb9).getModels(this.getUrl(), (models)=>{\n            $32aa79be08c85114$export$6edbc060ce567afa.models = models;\n            // Cache list of models\n            (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).set(\"models\", $32aa79be08c85114$export$6edbc060ce567afa.models);\n            (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"modelsLoaded\", $32aa79be08c85114$export$6edbc060ce567afa.models);\n        });\n    }\n    static getAll() {\n        return (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).get(\"models\");\n    }\n    static getNames() {\n        const models = this.getAll();\n        if (!models) return [];\n        return models.map((model)=>model.name);\n    }\n    static findModelByName(name) {\n        return this.getAll().find((model)=>model.name === name);\n    }\n}\n\n\nclass $2e71bcaf10bf7d80$export$790259fcca88d44f extends (0, $ddab77ee5f79370a$export$4425cedb09601f99) {\n    constructor(container){\n        super(container, (0, $32aa79be08c85114$export$6edbc060ce567afa).getNames());\n        this.bindEventListeners();\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"modelsLoaded\", this.handleModelsLoaded.bind(this));\n    }\n    handleModelsLoaded() {\n        this.setItems((0, $32aa79be08c85114$export$6edbc060ce567afa).getNames());\n    }\n    static getModels() {\n        return (0, $32aa79be08c85114$export$6edbc060ce567afa).getNames();\n    }\n}\n\n\n\n\n\n\n\nclass $bedd78c623905a1e$export$bd63dc5a00fdc201 {\n    static async updateChat(chat, data) {\n        Object.assign(chat, data);\n        await chat.save();\n        // TODO: Move to BaseModel\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatUpdated\", chat);\n    }\n    static async createChat(data) {\n        if (!data) data = {};\n        if (!data.title) data.title = \"Untitled\";\n        if (!data.model) data.model = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModel();\n        const chat = await new (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7)(data).create();\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setCurrentChatId(chat.id);\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatCreated\", chat);\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatSelected\", chat);\n        return chat;\n    }\n    static async deleteChatMessage(messageId) {\n        (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Deleted message\").autoDismiss();\n        const message = await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).get(messageId);\n        message.delete();\n    }\n    static async deleteChat(chat) {\n        await chat.delete();\n        if ((0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getCurrentChatId() === chat.id) (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setCurrentChatId(null);\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatDeleted\", chat);\n    }\n    static async getCurrentChat() {\n        const chatId = this.getCurrentChatId();\n        if (chatId) return await (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).get(chatId);\n        return null;\n    }\n    static getCurrentChatId() {\n        return (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).get(\"currentChatId\");\n    }\n    static async setCurrentChat(chat) {\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setCurrentChatId(chat.id);\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatSelected\", chat);\n    }\n    static async setCurrentChatId(chatId) {\n        const chat = await (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).get(chatId);\n        if (chat) await this.setCurrentChat(chat);\n    }\n    static async clearChats() {\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setCurrentChatId(null);\n        await (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).clear();\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).emit(\"chatsCleared\");\n    }\n}\n\n\n\n\nclass $26bc5f9df4a7215f$export$8a74b6c2b6abee5c {\n    constructor(chat, chatList, selected){\n        this.chat = chat;\n        this.chatList = chatList;\n        this.content = document.getElementById(\"chat-list-item-template\").content.cloneNode(true);\n        this.element = this.content.querySelector(\".chat-list-item\");\n        this.element.title = this.chat.title;\n        this.element.data = {\n            id: this.chat.id\n        };\n        this.element.classList.add(`chat${this.chat.id}`);\n        if (selected === true) this.element.classList.add(\"selected\");\n        this.setTitle();\n        this.bindEventListeners();\n    }\n    render() {}\n    bindEventListeners() {\n        this.element.addEventListener(\"mouseover\", this.onMouseover.bind(this));\n        this.element.addEventListener(\"mouseout\", this.onMouseout.bind(this));\n        this.element.addEventListener(\"click\", this.onClick.bind(this));\n        this.element.querySelector(\".list-item-delete\").addEventListener(\"click\", this.deleteChat.bind(this));\n    }\n    onMouseover() {\n        this.element.classList.add(\"hover\");\n    }\n    onMouseout() {\n        this.element.classList.remove(\"hover\");\n    }\n    onClick() {\n        this.chatList.selectChat(this.chat.id);\n    }\n    setTitle() {\n        const chatTitle = this.content.querySelector(\".chat-title\");\n        chatTitle.textContent = this.chat.title;\n    }\n    deleteChat() {\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).deleteChat(this.chat);\n        this.element.remove();\n    }\n}\n\n\nclass $3ca20c71cb0d9235$export$a4c936d95bae1613 {\n    constructor(selector){\n        this.listItems = document.querySelectorAll(selector);\n        this.draggedItem = null;\n        this.initializeDragAndDrop();\n    }\n    initializeDragAndDrop() {\n        this.listItems.forEach((item)=>{\n            item.addEventListener(\"dragstart\", this.handleDragStart.bind(this, item));\n            item.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n            item.addEventListener(\"drop\", this.handleDrop.bind(this, item));\n            item.addEventListener(\"dragend\", this.handleDragEnd.bind(this));\n        });\n    }\n    handleDragStart(item) {\n        this.draggedItem = item;\n    }\n    handleDragOver(e) {\n        e.preventDefault();\n    }\n    handleDrop(item) {\n        if (item !== this.draggedItem) {\n            let currentHTML = item.innerHTML;\n            item.innerHTML = this.draggedItem.innerHTML;\n            this.draggedItem.innerHTML = currentHTML;\n            console.debug(\"dnd drop\");\n        }\n    }\n    handleDragEnd() {\n        this.draggedItem = null;\n    }\n}\n\n\n\n\nclass $cc8724ddd4d9cd0f$export$f3b2d8a9ecf740ec {\n    constructor(){\n        this.element = document.getElementById(\"chat-list\");\n        this.template = document.getElementById(\"chat-list-item-template\").content;\n        this.bindEventListeners();\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat().then((chat)=>{\n            this.chat = chat;\n        });\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatCreated\", this.handleChatCreated.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatDeleted\", this.handleChatDeleted.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatsCleared\", this.handleChatsCleared.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatUpdated\", this.handleChatUpdated.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatSelected\", this.handleChatSelected.bind(this));\n    }\n    async selectChat(chatId) {\n        await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).setCurrentChatId(chatId);\n    }\n    handleChatCreated(chat) {\n        this.appendChat(chat, true);\n    }\n    handleChatDeleted(chat) {\n        if (this.chat?.id === chat.id) this.chat = null;\n        this.element.querySelector(`.chat${chat.id}`)?.remove();\n    }\n    handleChatsCleared() {\n        const elements = this.element.querySelectorAll(\".chat-list-item\");\n        elements.forEach((element)=>element.remove());\n    }\n    handleChatUpdated(chat) {\n        const listElement = this.element.querySelector(`.chat${chat.id} .chat-title`);\n        if (listElement) listElement.textContent = chat.title;\n    }\n    handleChatSelected(chat) {\n        if (this.chat) {\n            const previousListElement = this.element.querySelector(`.chat${this.chat.id}`);\n            if (previousListElement) previousListElement.classList.remove(\"selected\");\n        }\n        const newListElement = this.element.querySelector(`.chat${chat.id}`);\n        if (newListElement) newListElement.classList.add(\"selected\");\n        // Remember selected chat\n        this.chat = chat;\n    }\n    render() {\n        const currentChatId = (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChatId();\n        this.element.innerHTML = \"\";\n        (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).getAll().then((chats)=>{\n            chats.forEach((chat)=>{\n                const selected = chat.id === currentChatId;\n                this.appendChat(chat, selected);\n            });\n            new (0, $3ca20c71cb0d9235$export$a4c936d95bae1613)(\".chat-list-item\");\n        });\n    }\n    appendChat(chat, selected) {\n        const chatListItem = new (0, $26bc5f9df4a7215f$export$8a74b6c2b6abee5c)(chat, this, selected);\n        this.element.appendChild(chatListItem.element);\n        return chatListItem;\n    }\n}\n\n\n\n\nclass $55cf77cdfb251cce$export$6e3943ab9bac802 {\n    constructor(){\n        this.button = document.querySelector(\"#export-button\");\n        this.bindEventListeners();\n    }\n    bindEventListeners() {\n        this.button.addEventListener(\"click\", ()=>{\n            this.exportChat();\n            this.exportChatMessages();\n        });\n    }\n    async exportChat() {\n        const request = await (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).export();\n        request.onsuccess = function() {\n            let data = request.result;\n            // Convert the data to JSON format\n            let jsonData = JSON.stringify(data, 2);\n            // Export the JSON data by creating a file to download\n            let blob = new Blob([\n                jsonData\n            ], {\n                type: \"application/json\"\n            });\n            let url = URL.createObjectURL(blob);\n            let a = document.createElement(\"a\");\n            a.href = url;\n            a.download = \"chats.json\";\n            a.click();\n            URL.revokeObjectURL(url);\n        };\n        request.onerror = function(event) {\n            console.error(\"Error reading data: \", event.target.errorCode);\n        };\n    }\n    async exportChatMessages() {\n        const request = await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).export();\n        request.onsuccess = function() {\n            let data = request.result;\n            // Convert the data to JSON format\n            let jsonData = JSON.stringify(data, 2);\n            // Export the JSON data by creating a file to download\n            let blob = new Blob([\n                jsonData\n            ], {\n                type: \"application/json\"\n            });\n            let url = URL.createObjectURL(blob);\n            let a = document.createElement(\"a\");\n            a.href = url;\n            a.download = \"chat_messages.json\";\n            a.click();\n            URL.revokeObjectURL(url);\n        };\n        request.onerror = function(event) {\n            console.error(\"Error reading data: \", event.target.errorCode);\n        };\n    }\n}\n\n\nclass $9d6cd436dcd23c44$export$19fffca37ef3e106 {\n    // Set a value in localStorage\n    set(key, value) {\n        try {\n            const stringValue = JSON.stringify(value);\n            localStorage.setItem(key, stringValue);\n        } catch (e) {\n            console.error(\"Error saving to localStorage\", e);\n        }\n    }\n    // Get a value from localStorage, return defaultValue if key doesn't exist\n    get(key, defaultValue = null) {\n        try {\n            const value = localStorage.getItem(key);\n            return value !== null ? JSON.parse(value) : defaultValue;\n        } catch (e) {\n            console.error(\"Error reading from localStorage\", e);\n            return defaultValue;\n        }\n    }\n    // Remove a value from localStorage\n    remove(key) {\n        try {\n            localStorage.removeItem(key);\n        } catch (e) {\n            console.error(\"Error removing from localStorage\", e);\n        }\n    }\n}\n\n\nclass $7f3f2023aee8b38c$export$1ba59dacbcbf90fe {\n    constructor(){\n        this.settings = new (0, $9d6cd436dcd23c44$export$19fffca37ef3e106)();\n        this.chatList = new (0, $cc8724ddd4d9cd0f$export$f3b2d8a9ecf740ec)();\n        this.element = document.getElementById(\"sidebar\");\n        this.modelList = new (0, $2e71bcaf10bf7d80$export$790259fcca88d44f)(this.element.querySelector(\".chat-model-list\")).onClick(this.handleModelSelected.bind(this));\n        this.hamburgerButton = document.getElementById(\"hamburger-menu\");\n        this.searchButton = document.getElementById(\"search-button\");\n        this.downloadChatsButton = new (0, $55cf77cdfb251cce$export$6e3943ab9bac802)();\n        this.searchRow = document.getElementById(\"search-row\");\n        this.searchInput = document.getElementById(\"search-input\");\n        if (this.settings.get(\"sidebar-collapsed\") === true) this.element.classList.add(\"collapsed\");\n        this.bindEventListeners();\n        this.render();\n    }\n    render() {\n        this.chatList.render();\n    }\n    async handleModelSelected(selected) {\n        const chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat();\n        this.modelName.textContent = selected;\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).updateChat(chat, {\n            model: selected\n        });\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatSelected\", this.handleChatSelected);\n        this.searchButton.addEventListener(\"click\", this.toggleSearch.bind(this));\n        this.searchInput.addEventListener(\"keypress\", (0, $e3da2d8b324ccdd6$export$61fc7d43ac8f84b0)(this.performSearch.bind(this), 50));\n        this.searchInput.addEventListener(\"keyup\", (0, $e3da2d8b324ccdd6$export$61fc7d43ac8f84b0)(this.performSearch.bind(this), 50));\n        this.hamburgerButton.addEventListener(\"click\", this.toggle.bind(this));\n    }\n    // TODO: Fix\n    handleChatSelected = (chat)=>{\n        const listItem = this.element.querySelector(`chat${chat.id}`);\n        if (listItem) listItem.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n            inline: \"nearest\"\n        });\n    };\n    toggleSearch() {\n        const searchRow = document.getElementById(\"search-row\");\n        searchRow.classList.toggle(\"hidden\");\n        this.searchInput.focus();\n    }\n    performSearch() {\n        function escapeRegExp(string) {\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // Escapes special characters\n        }\n        const query = escapeRegExp(this.searchInput.value.trim()).replace(/\\s+/g, \".*\");\n        const queryContent = query.length > 2; // Nobody wants to query content based on one character?\n        const regex = new RegExp(query, \"i\"); // 'i' for case-insensitive matching\n        console.log(`Search ${query}`);\n        (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).getAll().then((chats)=>{\n            const matches = chats.filter((chat)=>{\n                let match = regex.test(chat.title);\n                if (queryContent) match ||= regex.test(chat.content);\n                return match;\n            }).map((chat)=>chat.id);\n            this.element.querySelectorAll(\".chat-list-item\").forEach((item)=>{\n                if (matches.includes(item.data.id)) // Now matches the type\n                item.classList.remove(\"hidden\");\n                else item.classList.add(\"hidden\");\n            });\n        });\n    }\n    toggle() {\n        this.element.classList.toggle(\"collapsed\");\n        this.hamburgerButton.classList.toggle(\"collapsed\");\n        if (this.element.classList.contains(\"collapsed\")) this.settings.set(\"sidebar-collapsed\", true);\n        else this.settings.set(\"sidebar-collapsed\", false);\n    }\n}\n\n\n\n\nclass $4469c979f6bfe094$export$4f2558dd25106ae2 {\n    constructor(){\n        document.addEventListener(\"click\", (event)=>{\n            // Check if the clicked element has the class 'copy-button'\n            if (event.target.classList.contains(\"copy-button\")) {\n                const targetSelector = event.target.getAttribute(\"data-target\");\n                if (!targetSelector) {\n                    console.error(\"The data-target attribute is not set\");\n                    return;\n                }\n                const textToCopy = document.getElementById(targetSelector).innerText;\n                // Create a temporary textarea element\n                const textarea = document.createElement(\"textarea\");\n                textarea.value = textToCopy;\n                document.body.appendChild(textarea);\n                // Select the text and copy it\n                textarea.select();\n                document.execCommand(\"copy\");\n                // Remove the temporary textarea\n                document.body.removeChild(textarea);\n                (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Text copied to clipboard\").autoDismiss();\n            }\n        });\n    }\n}\n\n\n\nclass $4566c9ff6a5f9006$export$fc9722a813484b48 {\n    constructor(){\n        document.addEventListener(\"click\", (event)=>{\n            // Check if the clicked element has the class 'copy-button'\n            if (event.target.classList.contains(\"download-button\")) {\n                // Get the index from the data-target attribute\n                const targetId = event.target.getAttribute(\"data-target\");\n                this.downloadElementContent(targetId, \"chat.html\");\n            }\n        });\n    }\n    downloadElementContent(elementId, filename) {\n        // Get the element\n        const element = document.getElementById(elementId);\n        if (!element) {\n            console.error(\"Element not found\");\n            return;\n        }\n        // Get the contents of the element\n        const content = element.innerText;\n        // Create a Blob with the content\n        const blob = new Blob([\n            content\n        ], {\n            type: \"text/html\"\n        });\n        // Create an anchor element and set the href to the blob\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = filename;\n        // Append the anchor to the document, trigger a click, and then remove it\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        // Revoke the blob URL\n        URL.revokeObjectURL(a.href);\n    }\n}\n\n\nclass $699d92be1eba6950$export$ee621bb1988a9f78 {\n    constructor(){\n        this.buttonSelector = \".drop-down-menu\";\n        this.dropDownMenus = document.querySelectorAll(this.buttonSelector);\n        this.init();\n    }\n    init() {\n        // Add a click listener to the whole document\n        document.addEventListener(\"click\", (event)=>{\n            // Check if the clicked element or any of its parents has the 'drop-down-menu' class\n            const menuElement = event.target.closest(this.buttonSelector);\n            if (menuElement) {\n                const dropDownMenu = menuElement.querySelector(\".drop-down-menu-items\");\n                if (dropDownMenu) this.toggleMenu(dropDownMenu);\n            }\n        });\n    }\n    toggleMenu(menu) {\n        menu.classList.toggle(\"hidden\");\n        menu.classList.toggle(\"visible\");\n    }\n}\n\n\n// Modal base class\nclass $41758d9174c453e4$export$2b77a92f1a5ad772 {\n    constructor(options){\n        this.domId = options.domId;\n        this.templateId = options.templateId;\n        this.modal = this.createDialogElement();\n        this.titleElement = this.modal.querySelector(\".modal-title\");\n        this.closeButton = this.modal.querySelector(\".button-close\");\n        this.closeButton.onclick = ()=>this.hide();\n        this._bindEventListeners();\n        this.setTitle(options.title);\n    }\n    setTitle(title) {\n        this.titleElement.textContent = title;\n    }\n    _bindEventListeners() {\n        this.modal.addEventListener(\"click\", (event)=>{\n            if (event.target == this.modal) this.hide();\n        });\n        window.addEventListener(\"keydown\", (event)=>{\n            if (event.key === \"Escape\") this.hide();\n        });\n    }\n    createDialogElement() {\n        const template = document.getElementById(this.templateId);\n        if (!template) {\n            console.error(`Template with ID ${this.templateId} not found.`);\n            return;\n        }\n        const clone = template.content.cloneNode(true);\n        const modalElement = clone.firstElementChild;\n        modalElement.id = this.domId;\n        if (!modalElement) {\n            console.error(`No modal element found in the template with ID ${this.templateId}.`);\n            return;\n        }\n        document.body.appendChild(modalElement);\n        return modalElement;\n    }\n    show() {\n        this.handleShow();\n    }\n    hide() {\n        this.handleHide();\n    }\n    handleShow() {\n        this.modal.classList.add(\"show\");\n    }\n    handleHide() {\n        this.modal.classList.remove(\"show\");\n    }\n}\n\n\n\n\n\n\nclass $e5f295542df33b8b$export$c197ce1a352372f extends (0, $41758d9174c453e4$export$2b77a92f1a5ad772) {\n    constructor(options){\n        super(options);\n        this.showButton = document.getElementById(options.buttonId);\n        this.urlInput = this.modal.querySelector(\"#input-url\");\n        this.modelInput = this.modal.querySelector(\"#input-model\");\n        this.systemPromptInput = this.modal.querySelector(\"#input-system-prompt\");\n        this.modelParametersInput = this.modal.querySelector(\"#input-model-parameters\");\n        this.refreshModelsButton = this.modal.querySelector(\".refresh-models-button\");\n        this.modelList = new (0, $2e71bcaf10bf7d80$export$790259fcca88d44f)(this.modal.querySelector(\"#model-list\"));\n        this.bindEventListeners();\n    }\n    getSelected() {\n        return (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModel();\n    }\n    bindEventListeners() {\n        this.urlInput.addEventListener(\"blur\", this.handleUrlUpdated.bind(this));\n        this.systemPromptInput.addEventListener(\"blur\", this.handleSystemPromptUpdated.bind(this));\n        this.modelParametersInput.addEventListener(\"blur\", ()=>this.handleModelParametersUpdated.bind(this));\n        this.modelList.onClick(this.handleModelUpdated.bind(this));\n        this.showButton.addEventListener(\"click\", this.show.bind(this));\n        this.refreshModelsButton.addEventListener(\"click\", this.refreshModels.bind(this));\n        this.closeButton.addEventListener(\"click\", this.hide.bind(this));\n    }\n    handleSystemPromptUpdated() {\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setSystemPrompt(this.systemPromptInput.value.trim());\n    }\n    handleModelUpdated() {\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setModel(this.modelList.getSelected());\n    }\n    handleModelParametersUpdated() {\n        const value = this.modelParametersInput.value.trim();\n        if (value === \"\") return;\n        try {\n            const parsedValue = JSON.parse(value);\n            const prettyJSON = JSON.stringify(parsedValue, 2);\n            (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setModelParameters(parsedValue);\n            this.modelParametersInput.value = prettyJSON;\n            this.modelParametersInput.classList.remove(\"error\");\n        } catch (error) {\n            if (error.name === \"SyntaxError\") this.modelParametersInput.classList.add(\"error\");\n            else console.error(error);\n        }\n    }\n    handleUrlUpdated() {\n        const value = this.urlInput.value.trim();\n        (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).setUrl(value);\n    }\n    show() {\n        this.loadSettings();\n        (0, $32aa79be08c85114$export$6edbc060ce567afa).load();\n        this.handleShow();\n    }\n    refreshModels() {\n        if (!(0, $32aa79be08c85114$export$6edbc060ce567afa).getUrl()) (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Please update the URL in the settings to continue.\");\n        else (0, $32aa79be08c85114$export$6edbc060ce567afa).load();\n    }\n    loadSettings() {\n        this.modelList.setSelected(this.getSelected());\n        this.urlInput.value = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getUrl();\n        const modelParameters = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModelParameters();\n        if (modelParameters) this.modelParametersInput.value = JSON.stringify(modelParameters, 2);\n    }\n}\n\n\n\n\n\nclass $de0cc8755b89a6ed$export$b1e182b800d07e9d extends (0, $e5f295542df33b8b$export$c197ce1a352372f) {\n    constructor(options){\n        super(options);\n    }\n    getSelected() {\n        return this.chat?.model;\n    }\n    async handleSystemPromptUpdated() {\n        this.chat.systemPrompt = this.systemPromptInput.value.trim();\n        await this.chat.save();\n    }\n    async handleModelUpdated() {\n        this.chat.model = this.modelList.getSelected();\n        await this.chat.save();\n    }\n    async handleModelParametersUpdated() {\n        this.chat.modelParameters = this.modelParametersInput.value.trim();\n        await this.chat.save();\n    }\n    async handleUrlUpdated() {\n        this.chat.url = this.urlInput.value.trim();\n        await this.chat.save();\n    }\n    loadSettings() {\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat().then((chat)=>{\n            this.modelList.setSelected(chat.model);\n            this.chat = chat;\n            this.urlInput.value = this.chat.url || (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getUrl();\n            const modelParameters = this.chat.modelParameters || (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModelParameters();\n            if (modelParameters) this.modelParametersInput.value = JSON.stringify(modelParameters, 2);\n        });\n    }\n}\n\n\n\n\n\nclass $213076b68d0eaf82$export$8f23e2f72bfa8e66 {\n    constructor(input, target, onSelected){\n        if (!target) throw Error(\"No target element specified\");\n        this.active = false;\n        this.onSelected = onSelected;\n        this.input = input;\n        this.target = target;\n        this.bindEventListeners();\n    }\n    bindEventListeners() {\n        this.input.addEventListener(\"input\", ()=>this.handleInput());\n        this.input.addEventListener(\"keydown\", (e)=>this.handleKeydown(e));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"select\", this.handleSelected.bind(this), this.ul);\n    }\n    handleInput() {\n        const text = this.getText();\n        const lastChar = text[text.length - 1];\n        // Handle show and hide using special characters\n        if (lastChar === \"@\") this.showTarget();\n        // Handle search if active\n        if (this.active) {\n            const searchTerm = this.getSearchTerm();\n            if (!this.target.filter(searchTerm)) // TODO: Show ”No matches” instead of hiding\n            this.hideTarget();\n        }\n    }\n    getText() {\n        return this.input.value.trim();\n    }\n    getSearchTerm() {\n        const text = this.getText();\n        const lastAtPos = text.lastIndexOf(\"@\");\n        const query = lastAtPos !== -1 ? text.substring(lastAtPos + 1) : null;\n        return query;\n    }\n    handleKeydown(event) {\n        const key = event.key;\n        // Select first item on tab\n        if (event.which == 9 && this.active) {\n            const select = this.target.element.querySelector(\"li:not(.hidden)\")?.textContent;\n            this.handleSelected(select);\n            event.preventDefault();\n        } else if (key === \" \" || key === \"Enter\" || key === \"Escape\") this.hideTarget();\n    }\n    handleSelected(selected) {\n        if (selected === null || selected === undefined) return;\n        if (!this.active) return;\n        const text = this.getText();\n        const lastAtPos = text.lastIndexOf(\"@\");\n        if (lastAtPos !== -1) {\n            this.input.value = text.substring(0, lastAtPos + 1) + selected;\n            this.input.focus();\n            this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n            // this.onSelected(selected);\n            this.hideTarget();\n        }\n    }\n    showTarget() {\n        this.active = true;\n        this.target.element.classList.add(\"active\");\n        this.target.show();\n    }\n    hideTarget() {\n        this.active = false;\n        this.target.element.classList.remove(\"active\");\n        this.target.hide();\n    }\n}\n\n\nclass $4b1afd8af8e7e6f9$export$a86091986009ee0c {\n    static exportChat(chat, filename) {\n        // Get the contents of the element\n        const content = chat.jsonify();\n        // Create a Blob with the content\n        const blob = new Blob([\n            content\n        ], {\n            type: \"application/json\"\n        });\n        // Create an anchor element and set the href to the blob\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = filename;\n        // Append the anchor to the document, trigger a click, and then remove it\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        // Revoke the blob URL\n        URL.revokeObjectURL(a.href);\n    }\n}\n\n\n\nclass $ceb8444dd004ab8a$export$8cf654b375a16d2d {\n    constructor(element){\n        this.element = element;\n        element.hoverable = this;\n        this.bindEventListeners();\n    }\n    bindEventListeners() {\n        this.element.addEventListener(\"mouseover\", ()=>this.onMouseover());\n        this.element.addEventListener(\"mouseout\", ()=>this.onMouseout());\n    }\n    onMouseover() {\n        this.element.classList.add(\"hover\");\n    }\n    onMouseout() {\n        this.element.classList.remove(\"hover\");\n    }\n}\n\n\n\n\nclass $81ab47502c469f14$export$4ff9f55b560a7a19 {\n    constructor(){\n        this.defaultTitle = \"Untitled\";\n        this.element = document.getElementById(\"chat-title\");\n        this.bindEventListeners();\n        this.render();\n    }\n    render() {\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat().then((chat)=>{\n            this.chat = chat;\n            this.setTitle(chat?.title);\n        });\n    }\n    setTitle(title) {\n        this.element.textContent = title || this.defaultTitle;\n    }\n    focus() {\n        const hasFocus = document.activeElement === this.element;\n        if (!hasFocus) this.element.focus();\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatDeleted\", this.handleChatDeleted.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatSelected\", this.handleChatSelected.bind(this));\n        this.element.addEventListener(\"blur\", this.handleSave.bind(this));\n        this.element.addEventListener(\"keypress\", (e)=>{\n            if (e.key === \"Enter\") {\n                e.preventDefault();\n                this.element.blur();\n            }\n        });\n    }\n    handleChatSelected(chat) {\n        this.chat = chat;\n        this.setTitle(chat.title);\n    }\n    handleChatDeleted(chat) {\n        if (chat.id === this.chat.id) this.setTitle(this.defaultTitle);\n    }\n    async handleSave() {\n        let title = this.element.textContent.trim();\n        if (title.length === 0) {\n            title = this.defaultTitle;\n            this.element.classList.add(\"error\");\n        } else this.element.classList.remove(\"error\");\n        const chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat();\n        if (chat) await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).updateChat(chat, {\n            title: title\n        });\n        else await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).createChat({\n            title: title\n        });\n    }\n}\n\n\n// TODO: Move code here from App.js and ChatArea.js\nclass $72cef0307ec03858$export$eb632d643458470b {\n    constructor(){\n        this.chatHistory = document.getElementById(\"chat-history\");\n        this.messageInput = document.getElementById(\"message-input\");\n        this.sendButton = document.getElementById(\"send-button\");\n        this.abortButton = document.getElementById(\"abort-button\");\n    }\n}\n\n\n\nclass $570bf9ace8bdf9d6$export$55b289eb1b395f0c {\n    constructor(){\n        this.chatTitle = new (0, $81ab47502c469f14$export$4ff9f55b560a7a19)();\n        this.chatForm = new (0, $72cef0307ec03858$export$eb632d643458470b)();\n        this.chatHistory = document.getElementById(\"chat-history\");\n        this.messageInput = document.getElementById(\"message-input\");\n        this.editChatButton = document.getElementById(\"edit-chat-button\");\n        this.chatModel = document.getElementById(\"chat-model\");\n        this.modelName = this.chatModel.querySelector(\".chat-model-name\");\n        this.scrollToTopButton = document.getElementById(\"scroll-to-top-button\");\n        this.scrollToEndButton = document.getElementById(\"scroll-to-end-button\");\n        this.deleteChatButton = document.getElementById(\"delete-chat-button\");\n        this.exportChatButton = document.getElementById(\"export-chat-button\");\n        this.modelList = new (0, $2e71bcaf10bf7d80$export$790259fcca88d44f)(this.chatModel.querySelector(\".chat-model-list\")).onClick(this.handleModelSelected.bind(this));\n        new (0, $213076b68d0eaf82$export$8f23e2f72bfa8e66)(this.messageInput, this.modelList, this.handleModelSelected.bind(this));\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat().then((chat)=>{\n            if (!chat) return;\n            this.chat = chat;\n            this.render();\n        });\n        this.bindEventListeners();\n    }\n    render() {\n        // Clear history view\n        this.chatHistory.innerText = \"\";\n        if (this.chat) {\n            // Show model name in \"talking to\"\n            this.modelName.textContent = this.chat.model;\n            // Update list of models\n            this.modelList.setSelected(this.chat.model);\n            this.chat // Render chat history\n            .getMessages().then((messages)=>{\n                messages.forEach((message)=>{\n                    this.createMessageDiv(message);\n                });\n            });\n            this.scrollToEnd();\n        }\n        this.messageInput.focus();\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatSelected\", this.handleChatSelected.bind(this));\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatDeleted\", this.handleChatDeleted.bind(this));\n        this.scrollToTopButton.addEventListener(\"click\", this.scrollToTop.bind(this));\n        this.scrollToEndButton.addEventListener(\"click\", this.scrollToEnd.bind(this));\n        this.editChatButton.addEventListener(\"click\", this.handleEditChat.bind(this));\n        this.deleteChatButton.addEventListener(\"click\", this.handleDeleteChat.bind(this));\n        this.exportChatButton.addEventListener(\"click\", ()=>{\n            (0, $4b1afd8af8e7e6f9$export$a86091986009ee0c).exportChat(this.chat, `chat-${this.chat.id}.json`);\n        });\n        this.currentMessage = this.chatHistory.querySelector(\".selected\");\n        // Select chat message with arrow up and arrow down keys\n        document.addEventListener(\"keydown\", (event1)=>{\n            let next, previous;\n            if (event1.key === \"ArrowDown\") {\n                next = this.currentMessage ? this.currentMessage.nextElementSibling : this.chatHistory.firstElementChild;\n                if (next) {\n                    if (this.currentMessage) this.currentMessage.classList.remove(\"hover\");\n                    next.classList.add(\"hover\");\n                    this.currentMessage = next; // Update currentMessage\n                    this.currentMessage.scrollIntoView({\n                        behavior: \"smooth\",\n                        block: \"nearest\"\n                    }); // Scroll into view\n                }\n            } else if (event1.key === \"ArrowUp\") {\n                previous = this.currentMessage ? this.currentMessage.previousElementSibling : this.chatHistory.lastElementChild;\n                if (previous) {\n                    if (this.currentMessage) this.currentMessage.classList.remove(\"hover\");\n                    previous.classList.add(\"hover\");\n                }\n                this.currentMessage = previous; // Update currentMessage\n                this.currentMessage.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"nearest\"\n                }); // Scroll into view\n            }\n        });\n    }\n    createMessageDiv(message) {\n        const domId = `chat-message-${message.id}`;\n        const role = message.role;\n        const content = message.content;\n        // Get the template and its content\n        const template = document.getElementById(\"chat-message-template\");\n        const messageClone = template.content.cloneNode(true);\n        // Find the div and span elements within the cloned template\n        const messageDiv = messageClone.querySelector(\".chat-message\");\n        const textSpan = messageClone.querySelector(\".chat-message-text\");\n        const deleteButton = messageClone.querySelector(\".delete-chat-message-button\");\n        const copyButton = messageClone.querySelector(\".copy-chat-message-button .copy-button\");\n        const goodButton = messageClone.querySelector(\".good-chat-message-button\");\n        const badButton = messageClone.querySelector(\".bad-chat-message-button\");\n        const flagButton = messageClone.querySelector(\".flag-chat-message-button\");\n        if (message.quality == \"bad\") badButton.classList.add(\"selected\");\n        else if (message.quality == \"good\") goodButton.classList.add(\"selected\");\n        else if (message.quality == \"flagged\") flagButton.classList.add(\"selected\");\n        // Set the class for role and text content\n        messageDiv.classList.add(`${role}-chat-message`);\n        messageDiv.id = domId;\n        textSpan.textContent = content;\n        messageDiv.spellcheck = false;\n        // Append to chatHistory and adjust scroll\n        this.chatHistory.appendChild(messageDiv);\n        messageDiv.dataset[\"id\"] = message.id;\n        new (0, $ceb8444dd004ab8a$export$8cf654b375a16d2d)(messageDiv);\n        deleteButton.addEventListener(\"click\", async ()=>{\n            await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).deleteChatMessage(message.id);\n            messageDiv.remove();\n        });\n        copyButton.dataset[\"target\"] = domId;\n        flagButton.addEventListener(\"click\", async ()=>{\n            (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Flagged message\").autoDismiss();\n            message.quality = \"flagged\";\n            await message.save();\n        });\n        goodButton.addEventListener(\"click\", async ()=>{\n            (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Marked message as good\").autoDismiss();\n            message.quality = \"good\";\n            await message.save();\n        });\n        badButton.addEventListener(\"click\", async ()=>{\n            (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Marked message as bad\").autoDismiss();\n            message.quality = \"bad\";\n            await message.save();\n        });\n        return {\n            element: messageDiv,\n            textElement: textSpan\n        };\n    }\n    handleChatDeleted(chat) {\n        if (chat.id === this.chat?.id) this.chat = null;\n        else this.chat = chat;\n        this.render();\n    }\n    async handleModelSelected(selected) {\n        const chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat();\n        this.modelName.textContent = selected;\n        (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).updateChat(chat, {\n            model: selected\n        });\n    }\n    handleChatSelected(chat) {\n        this.chat = chat;\n        this.render();\n    }\n    handleEditChat() {\n        this.chatTitle.focus();\n        event.stopPropagation();\n    }\n    async handleDeleteChat() {\n        const chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat();\n        if (chat) await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).deleteChat(chat);\n    }\n    scrollToTop() {\n        this.chatHistory.scrollTop = 0;\n    }\n    scrollToEnd() {\n        this.chatHistory.scrollTop = this.chatHistory.scrollHeight;\n    }\n}\n\n\nclass $8e0651281df4c7fc$export$86fbec116b87613f {\n    static run() {\n        (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).initialize();\n        const app = new $8e0651281df4c7fc$export$86fbec116b87613f();\n        return app;\n    }\n    constructor(){\n        this.sidebar = new (0, $7f3f2023aee8b38c$export$1ba59dacbcbf90fe)();\n        this.chatArea = new (0, $570bf9ace8bdf9d6$export$55b289eb1b395f0c)();\n        this.api = new (0, $22a7c45da799ce5c$export$819c9b9e02ecbeb9)();\n        // this.api = new OpenAiApi();\n        this.settingsDialog = new (0, $e5f295542df33b8b$export$c197ce1a352372f)({\n            domId: \"settings-dialog\",\n            buttonId: \"settings-button\",\n            title: \"Application settings\",\n            templateId: \"settings-dialog-template\"\n        });\n        this.chatSettingsDialog = new (0, $de0cc8755b89a6ed$export$b1e182b800d07e9d)({\n            domId: \"chat-settings-dialog\",\n            buttonId: \"chat-settings-button\",\n            title: \"Chat settings\",\n            templateId: \"settings-dialog-template\"\n        });\n        this.downloadButton = new (0, $4566c9ff6a5f9006$export$fc9722a813484b48)();\n        this.copyButton = new (0, $4469c979f6bfe094$export$4f2558dd25106ae2)();\n        this.dropDownMenu = new (0, $699d92be1eba6950$export$ee621bb1988a9f78)();\n        this.newChatButton = document.querySelector(\"#new-chat-button\");\n        this.clearButton = document.querySelector(\"#clear-button\");\n        this.initializeElements();\n        this.bindEventListeners();\n        this.logInitialization();\n    }\n    initializeElements() {\n        // this.sendButton = document.getElementById('send-button');\n        this.abortButton = document.getElementById(\"abort-button\");\n        this.messageInput = document.getElementById(\"message-input\");\n        this.chatHistory = document.getElementById(\"chat-history\");\n    }\n    logInitialization() {\n        const msg = `~~~~\\nChat\\n~~~~\nModel:       ${(0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModel()}\nURL:         ${(0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getUrl()}\nChat:        ${(0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getCurrentChatId()}\nParameters:  ${JSON.stringify((0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModelParameters())}\n`;\n        console.log(msg);\n    }\n    bindEventListeners() {\n        (0, $89906307e103a6a0$export$d61e24a684f9e51).listen(\"chatSelected\", this.handleChatSelected);\n        this.newChatButton.addEventListener(\"click\", this.handleNewChat.bind(this));\n        this.clearButton.addEventListener(\"click\", this.handleClear.bind(this));\n        // this.sendButton.addEventListener('click', this.sendMessage.bind(this));\n        this.abortButton.addEventListener(\"click\", this.handleAbort.bind(this));\n        this.messageInput.addEventListener(\"keypress\", this.handleKeyPress.bind(this));\n    }\n    handleChatSelected = (chat)=>{\n        window.history.pushState({}, \"\", `/chats/${chat.id}`);\n    };\n    handleAbort = ()=>{\n        this.api.abort();\n        this.enableForm();\n        console.log(\"Request aborted\");\n    };\n    handleKeyPress = (event)=>{\n        if (event.key === \"Enter\" && !event.shiftKey) this.sendMessage();\n    };\n    enableForm() {\n        (0, $9bf0ffc1f90fef06$export$cb0933279c36a66b).hideElement(this.abortButton).enableInput(this.messageInput);\n        this.messageInput.focus();\n    }\n    disableForm() {\n        (0, $9bf0ffc1f90fef06$export$cb0933279c36a66b).showElement(this.abortButton).disableInput(this.messageInput);\n    }\n    // https://github.com/jmorganca/ollama/blob/main/docs/api.md#generate-a-completion\n    async sendMessage() {\n        const userPrompt = this.messageInput.value.trim();\n        // Get the current chat\n        let chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).getCurrentChat();\n        const url = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getUrl(\"/api/chat\");\n        if (!url) {\n            (0, $d0e57ac33ccf02ae$export$93fa2dff72ea7b22).show(\"Please update the URL in the settings to continue. \");\n            return null;\n        }\n        if (userPrompt) {\n            // Reset input\n            this.messageInput.value = \"\";\n            // Create new chat\n            if (!chat) chat = await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).createChat({\n                title: \"Untitled\",\n                model: (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModel()\n            });\n            // Store user message\n            const userMessage = await chat.addMessage({\n                role: \"user\",\n                content: userPrompt\n            });\n            const systemMessage = await chat.addMessage({\n                role: \"assistant\",\n                content: \"\"\n            });\n            const systemPrompt = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getSystemPrompt();\n            const modelParameters = (0, $6cafd1d766934ced$export$c72f6eaae7b9adff).getModelParameters();\n            // Disable form\n            this.disableForm();\n            // Create user message\n            this.createChatMessage(userMessage);\n            // Create system message container\n            const responseElement = this.createChatMessage(systemMessage);\n            const requestContext = {\n                chat: chat,\n                userMessage: userMessage,\n                systemMessage: systemMessage,\n                responseElement: responseElement\n            };\n            const requestData = await this.api.makeRequest(chat, this.getModelFromText(userMessage.content) || chat.model, userMessage, systemPrompt, modelParameters);\n            // Show spinner\n            responseElement.textElement.innerHTML = '<div class=\"waiting\"></div>';\n            this.chatArea.scrollToEnd();\n            // Make request\n            this.api.send(url, requestData, (request, response)=>this.handleResponse(request, response, requestContext), (request, error)=>this.handleResponseError(request, error), (request, response)=>this.handleDone(request, response, requestContext));\n        }\n    }\n    /*\n   * Returns the model mentioned in the text.\n   */ getModelFromText(text) {\n        if (text === null) return null;\n        let modelName = null;\n        const matches = text.match(/@(\\S+)/g);\n        if (matches) {\n            // Get the last match from the array\n            const lastMatch = matches[matches.length - 1];\n            // Extract the text after the @ by removing the @ symbol\n            modelName = lastMatch.slice(1);\n        }\n        return modelName;\n    }\n    createChatMessage(message) {\n        return this.chatArea.createMessageDiv(message);\n    }\n    handleResponse(request, response, context) {\n        const responseElement = context.responseElement;\n        const sanitizedContent = this.sanitizeContent(response);\n        // Remember original response\n        context.systemMessage.content += sanitizedContent;\n        responseElement.textElement.textContent += sanitizedContent;\n        this.chatArea.scrollToEnd();\n    }\n    handleResponseError(request, error) {\n        // Ignore \"Abort\" button\n        if (error !== undefined && error.name !== \"AbortError\") console.error(`Error: ${error.message}`);\n        this.chatArea.scrollToEnd();\n        this.enableForm();\n    }\n    async handleDone(request, response, context) {\n        const chat = context.chat;\n        console.log(`Chat ${chat.id} done`);\n        await context.systemMessage.save();\n        this.enableForm();\n    }\n    async handleNewChat() {\n        await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).createChat();\n    }\n    async handleClear() {\n        await (0, $bedd78c623905a1e$export$bd63dc5a00fdc201).clearChats();\n    }\n    sanitizeContent = (content)=>{\n        // TODO: Sanitization logic here\n        return content;\n    };\n    getIdParam = ()=>{\n        return new URL(window.location.href).pathname.split(\"/\").pop();\n    };\n}\n\n\n\n\n// TODO: refactor\nasync function $22b1963f49ab731e$var$initialize() {\n    await (0, $0674bb6c85f30ef2$export$d49dffca20dba6f7).initialize();\n    await (0, $a1d4810cc36cac20$export$423c13fd52bec8ad).initialize();\n}\n$22b1963f49ab731e$var$initialize().then(()=>{\n    (0, $8e0651281df4c7fc$export$86fbec116b87613f).run();\n});\n\n})();\n//# sourceMappingURL=index.34f9ac8b.js.map\n","import { App } from './App.js';\nimport { Chat } from './models/Chat.js';\nimport { ChatMessage } from './models/ChatMessage.js';\n\n// TODO: refactor\nasync function initialize() {\n  await Chat.initialize();\n  await ChatMessage.initialize();\n}\n\ninitialize().then(() => {\n  App.run();\n});\n","import { UINotification } from './UINotification.js';\nimport { Settings } from './models/Settings.js';\nimport { Event } from './Event.js';\nimport { DOM } from './Dom.js';\nimport { Sidebar } from './Sidebar.js';\nimport { AppController } from './AppController.js';\nimport { CopyButton } from './CopyButton.js';\nimport { OllamaApi } from './OllamaApi.js';\n// import { OpenAiApi } from './OpenAiApi.js';\nimport { DownloadButton } from './DownloadButton.js';\nimport { DropDownMenu } from './DropDownMenu.js';\nimport { SettingsDialog } from './SettingsDialog.js';\nimport { ChatSettingsDialog } from './ChatSettingsDialog.js';\n// import { MarkdownFormatter } from './MarkdownFormatter.js'\nimport { ChatArea } from './ChatArea.js';\n\n// TODO: Review and refactor\nexport class App {\n  static run() {\n    UINotification.initialize();\n    const app = new App();\n    return app;\n  }\n\n  constructor() {\n    this.sidebar = new Sidebar();\n    this.chatArea = new ChatArea();\n    this.api = new OllamaApi();\n    // this.api = new OpenAiApi();\n    this.settingsDialog = new SettingsDialog({\n      domId: 'settings-dialog',\n      buttonId: 'settings-button',\n      title: 'Application settings',\n      templateId: 'settings-dialog-template',\n    });\n    this.chatSettingsDialog = new ChatSettingsDialog({\n      domId: 'chat-settings-dialog',\n      buttonId: 'chat-settings-button',\n      title: 'Chat settings',\n      templateId: 'settings-dialog-template',\n    });\n    this.downloadButton = new DownloadButton();\n    this.copyButton = new CopyButton();\n    this.dropDownMenu = new DropDownMenu();\n    this.newChatButton = document.querySelector('#new-chat-button');\n    this.clearButton = document.querySelector('#clear-button');\n    this.initializeElements();\n    this.bindEventListeners();\n    this.logInitialization();\n  }\n\n  initializeElements() {\n    // this.sendButton = document.getElementById('send-button');\n    this.abortButton = document.getElementById('abort-button');\n    this.messageInput = document.getElementById('message-input');\n    this.chatHistory = document.getElementById('chat-history');\n  }\n\n  logInitialization() {\n    const msg = `~~~~\\nChat\\n~~~~\nModel:       ${Settings.getModel()}\nURL:         ${Settings.getUrl()}\nChat:        ${Settings.getCurrentChatId()}\nParameters:  ${JSON.stringify(Settings.getModelParameters())}\n`;\n    console.log(msg);\n  }\n\n  bindEventListeners() {\n    Event.listen('chatSelected', this.handleChatSelected);\n    this.newChatButton.addEventListener('click', this.handleNewChat.bind(this));\n    this.clearButton.addEventListener('click', this.handleClear.bind(this));\n    // this.sendButton.addEventListener('click', this.sendMessage.bind(this));\n    this.abortButton.addEventListener('click', this.handleAbort.bind(this));\n    this.messageInput.addEventListener(\n      'keypress',\n      this.handleKeyPress.bind(this),\n    );\n  }\n\n  handleChatSelected = (chat) => {\n    window.history.pushState({}, '', `/chats/${chat.id}`);\n  };\n\n  handleAbort = () => {\n    this.api.abort();\n    this.enableForm();\n    console.log('Request aborted');\n  };\n\n  handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      this.sendMessage();\n    }\n  };\n\n  enableForm() {\n    DOM.hideElement(this.abortButton).enableInput(this.messageInput);\n    this.messageInput.focus();\n  }\n\n  disableForm() {\n    DOM.showElement(this.abortButton).disableInput(this.messageInput);\n  }\n\n  // https://github.com/jmorganca/ollama/blob/main/docs/api.md#generate-a-completion\n  async sendMessage() {\n    const userPrompt = this.messageInput.value.trim();\n    // Get the current chat\n    let chat = await AppController.getCurrentChat();\n    const url = Settings.getUrl('/api/chat');\n    if (!url) {\n      UINotification.show(\n        'Please update the URL in the settings to continue. ',\n      );\n      return null;\n    }\n    if (userPrompt) {\n      // Reset input\n      this.messageInput.value = '';\n      // Create new chat\n      if (!chat) {\n        chat = await AppController.createChat({\n          title: 'Untitled',\n          model: Settings.getModel(),\n        });\n      }\n      // Store user message\n      const userMessage = await chat.addMessage({\n        role: 'user',\n        content: userPrompt,\n      });\n      const systemMessage = await chat.addMessage({\n        role: 'assistant',\n        content: '',\n      });\n      const systemPrompt = Settings.getSystemPrompt();\n      const modelParameters = Settings.getModelParameters();\n      // Disable form\n      this.disableForm();\n      // Create user message\n      this.createChatMessage(userMessage);\n      // Create system message container\n      const responseElement = this.createChatMessage(systemMessage);\n      const requestContext = {\n        chat,\n        userMessage,\n        systemMessage,\n        responseElement,\n      };\n      const requestData = await this.api.makeRequest(\n        chat,\n        this.getModelFromText(userMessage.content) || chat.model,\n        userMessage,\n        systemPrompt,\n        modelParameters,\n      );\n      // Show spinner\n      responseElement.textElement.innerHTML = '<div class=\"waiting\"></div>';\n      this.chatArea.scrollToEnd();\n      // Make request\n      this.api.send(\n        url,\n        requestData,\n        (request, response) =>\n          this.handleResponse(request, response, requestContext),\n        (request, error) => this.handleResponseError(request, error),\n        (request, response) =>\n          this.handleDone(request, response, requestContext),\n      );\n    }\n  }\n\n  /*\n   * Returns the model mentioned in the text.\n   */\n  getModelFromText(text) {\n    if (text === null) {\n      return null;\n    }\n    let modelName = null;\n    const matches = text.match(/@(\\S+)/g);\n\n    if (matches) {\n      // Get the last match from the array\n      const lastMatch = matches[matches.length - 1];\n      // Extract the text after the @ by removing the @ symbol\n      modelName = lastMatch.slice(1);\n    }\n    return modelName;\n  }\n\n  createChatMessage(message) {\n    return this.chatArea.createMessageDiv(message);\n  }\n\n  handleResponse(request, response, context) {\n    const responseElement = context.responseElement;\n    const sanitizedContent = this.sanitizeContent(response);\n    // Remember original response\n    context.systemMessage.content += sanitizedContent;\n    responseElement.textElement.textContent += sanitizedContent;\n    this.chatArea.scrollToEnd();\n  }\n\n  handleResponseError(request, error) {\n    // Ignore \"Abort\" button\n    if (error !== undefined && error.name !== 'AbortError') {\n      console.error(`Error: ${error.message}`);\n    }\n    this.chatArea.scrollToEnd();\n    this.enableForm();\n  }\n\n  async handleDone(request, response, context) {\n    const chat = context.chat;\n    console.log(`Chat ${chat.id} done`);\n    await context.systemMessage.save();\n    this.enableForm();\n  }\n\n  async handleNewChat() {\n    await AppController.createChat();\n  }\n\n  async handleClear() {\n    await AppController.clearChats();\n  }\n\n  sanitizeContent = (content) => {\n    // TODO: Sanitization logic here\n    return content;\n  };\n\n  getIdParam = () => {\n    return new URL(window.location.href).pathname.split('/').pop();\n  };\n}\n","function simpleHash(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// Show all uncaught errors as UI notifications\n/*\nwindow.onerror = function (message, source, lineno, colno, error) {\n  const errorDetails = `${message} at ${source}:${lineno}:${colno}`;\n  UINotification.show(errorDetails, 'error');\n  return true;\n};\n*/\n\nexport class UINotification {\n  constructor(message, type, autoDismiss) {\n    const id = simpleHash(JSON.stringify(message));\n    this.type = type;\n    this.domId = `notification-${id}`;\n    this.container = document.body;\n    this.template = document.getElementById('notification-template').content;\n    this._bindEventListeners();\n    if (autoDismiss) {\n      this.autoDismiss();\n    }\n  }\n\n  _bindEventListeners() {\n    window.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        this.hide();\n      }\n    });\n  }\n\n  autoDismiss() {\n    setTimeout(() => {\n      this.hide();\n    }, 2000); // 2000 milliseconds (2 seconds)\n  }\n\n  static show(message, type) {\n    const notification = new UINotification(message, type);\n    notification.show(message);\n    return notification;\n  }\n\n  static initialize() {\n    // Store the original console.error function\n    const originalConsoleError = console.error;\n\n    // Override console.error\n    console.error = function (...args) {\n      UINotification.show(args);\n      // Call the original console.error with all arguments\n      originalConsoleError.apply(console, args);\n    };\n  }\n\n  static handleApplicationError(error) {\n    console.debug('caught error');\n    console.error(error);\n    UINotification.show(error);\n  }\n\n  show(message) {\n    // Clone the template\n    const clone = this.template.cloneNode(true);\n\n    // Find the root element of the notification in the clone\n    const notificationElement = clone.querySelector('.notification');\n    if (!notificationElement) {\n      console.error('Notification root element not found in template');\n      return;\n    }\n\n    // Set the message\n    clone.querySelector('.notification-message').textContent = message;\n\n    notificationElement.id = this.domId; // Set ID on the actual element, not the fragment\n    // Add type, for example, error\n    if (this.type) {\n      notificationElement.classList.add(`notification-${this.type}`);\n    }\n\n    // Add close functionality\n    const closeButton = clone.querySelector('.close-notification-button');\n    closeButton.onclick = () => this.hide();\n\n    // Don't show the same notification twice\n    if (!document.getElementById(this.domId)) {\n      // Append to the container and display\n      this.container.appendChild(clone);\n    }\n  }\n\n  hide() {\n    document.getElementById(this.domId)?.remove();\n  }\n}\n","export class Settings {\n  // Static method to set a value in localStorage\n  static set(key, value) {\n    try {\n      const stringValue = JSON.stringify(value);\n      localStorage.setItem(key, stringValue);\n    } catch (e) {\n      console.error('Error saving to localStorage', e);\n    }\n  }\n\n  // Static method to get a value from localStorage\n  static get(key, defaultValue = null) {\n    try {\n      const value = localStorage.getItem(key);\n      return value !== null ? JSON.parse(value) : defaultValue;\n    } catch (e) {\n      console.error('Error reading from localStorage', e);\n      return defaultValue;\n    }\n  }\n\n  // Static method to remove a value from localStorage\n  static remove(key) {\n    try {\n      localStorage.removeItem(key);\n    } catch (e) {\n      console.error('Error removing from localStorage', e);\n    }\n  }\n\n  static getUrl(uri) {\n    try {\n      const baseUrl = Settings.get('url');\n      if (uri) {\n        return new URL(uri, baseUrl).href;\n      } else {\n        return baseUrl;\n      }\n    } catch (error) {\n      return null;\n    }\n  }\n\n  static setUrl(url) {\n    Settings.set('url', url);\n  }\n\n  static getModel() {\n    return Settings.get('model');\n  }\n\n  static setModel(model) {\n    Settings.set('model', model);\n  }\n\n  static getSystemPrompt() {\n    return Settings.get('system-prompt');\n  }\n\n  static setSystemPrompt(systemPrompt) {\n    if (systemPrompt === '') {\n      systemPrompt = null;\n    }\n    Settings.set('system-prompt', systemPrompt);\n  }\n\n  static getModelParameters() {\n    return Settings.get('model-parameters');\n  }\n\n  static setModelParameters(modelParameters) {\n    if (modelParameters === '') {\n      modelParameters = null;\n    }\n    Settings.set('model-parameters', modelParameters);\n  }\n\n  static getCurrentChatId() {\n    return Settings.get('currentChatId');\n  }\n\n  static setCurrentChatId(chatId) {\n    if (chatId === undefined) {\n      chatId = null;\n    }\n    Settings.set('currentChatId', chatId);\n  }\n}\n","export class Event {\n  static listen(eventName, handler, target) {\n    if (target === null || target === undefined) {\n      target = window;\n    }\n    target.addEventListener(eventName, (event) => {\n      handler(event.detail);\n    });\n  }\n\n  static emit(eventName, data, target) {\n    if (target === null || target === undefined) {\n      target = window;\n    }\n    let log = `${eventName}`;\n    if (data?.id) {\n      log += ` id: ${data.id}`;\n    }\n    console.log(log);\n    const event = new CustomEvent(eventName, {\n      detail: data || {},\n      bubbles: true, // This makes the event bubble up through the DOM\n    });\n    target.dispatchEvent(event);\n  }\n}\n","export class DOM {\n  static showElement(element) {\n    element.classList.remove('hidden');\n    return this;\n  }\n\n  static hideElement(element) {\n    element.classList.add('hidden');\n    return this;\n  }\n\n  static enableInput(element) {\n    element.removeAttribute('disabled');\n    return this;\n  }\n\n  static disableInput(element) {\n    element.setAttribute('disabled', 'disabled');\n    return this;\n  }\n}\n","import { debounce } from './debounce.js';\nimport { Event } from './Event.js';\nimport { Chat } from './models/Chat.js';\nimport { ModelsList } from './ModelsList.js';\nimport { AppController } from './AppController.js';\nimport { ChatList } from './ChatList.js';\nimport { DownloadChatsButton } from './DownloadChatsButton.js';\nimport { LocalStorage } from './models/LocalStorage.js';\n\nexport class Sidebar {\n  constructor() {\n    this.settings = new LocalStorage();\n    this.chatList = new ChatList();\n    this.element = document.getElementById('sidebar');\n    this.modelList = new ModelsList(\n      this.element.querySelector('.chat-model-list'),\n    ).onClick(this.handleModelSelected.bind(this));\n\n    this.hamburgerButton = document.getElementById('hamburger-menu');\n    this.searchButton = document.getElementById('search-button');\n    this.downloadChatsButton = new DownloadChatsButton();\n    this.searchRow = document.getElementById('search-row');\n    this.searchInput = document.getElementById('search-input');\n    if (this.settings.get('sidebar-collapsed') === true) {\n      this.element.classList.add('collapsed');\n    }\n    this.bindEventListeners();\n    this.render();\n  }\n\n  render() {\n    this.chatList.render();\n  }\n\n  async handleModelSelected(selected) {\n    const chat = await AppController.getCurrentChat();\n    this.modelName.textContent = selected;\n    AppController.updateChat(chat, { model: selected });\n  }\n\n  bindEventListeners() {\n    Event.listen('chatSelected', this.handleChatSelected);\n    this.searchButton.addEventListener('click', this.toggleSearch.bind(this));\n    this.searchInput.addEventListener(\n      'keypress',\n      debounce(this.performSearch.bind(this), 50),\n    );\n    this.searchInput.addEventListener(\n      'keyup',\n      debounce(this.performSearch.bind(this), 50),\n    );\n    this.hamburgerButton.addEventListener('click', this.toggle.bind(this));\n  }\n\n  // TODO: Fix\n  handleChatSelected = (chat) => {\n    const listItem = this.element.querySelector(`chat${chat.id}`);\n    if (listItem) {\n      listItem.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start', // \"start\" will bring the top of the element into view\n        inline: 'nearest', // \"nearest\" will scroll to the nearest edge if partially visible\n      });\n    }\n  };\n\n  toggleSearch() {\n    const searchRow = document.getElementById('search-row');\n    searchRow.classList.toggle('hidden');\n    this.searchInput.focus();\n  }\n\n  performSearch() {\n    function escapeRegExp(string) {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // Escapes special characters\n    }\n    const query = escapeRegExp(this.searchInput.value.trim()).replace(\n      /\\s+/g,\n      '.*',\n    );\n    const queryContent = query.length > 2; // Nobody wants to query content based on one character?\n    const regex = new RegExp(query, 'i'); // 'i' for case-insensitive matching\n    console.log(`Search ${query}`);\n    Chat.getAll().then((chats) => {\n      const matches = chats\n        .filter((chat) => {\n          let match = regex.test(chat.title);\n          if (queryContent) {\n            match ||= regex.test(chat.content);\n          }\n          return match;\n        })\n        .map((chat) => chat.id);\n      this.element.querySelectorAll('.chat-list-item').forEach((item) => {\n        if (matches.includes(item.data.id)) {\n          // Now matches the type\n          item.classList.remove('hidden');\n        } else {\n          item.classList.add('hidden');\n        }\n      });\n    });\n  }\n\n  toggle() {\n    this.element.classList.toggle('collapsed');\n    this.hamburgerButton.classList.toggle('collapsed');\n    if (this.element.classList.contains('collapsed')) {\n      this.settings.set('sidebar-collapsed', true);\n    } else {\n      this.settings.set('sidebar-collapsed', false);\n    }\n  }\n}\n","export function debounce(func, wait) {\n  let timeout;\n\n  return function funcWrapper(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n","import { BaseModel } from './BaseModel.js';\nimport { ChatMessage } from './ChatMessage.js';\n\nexport class Chat extends BaseModel {\n  async addMessage(data) {\n    data.chatId = this.id;\n    return await new ChatMessage(data).create();\n  }\n\n  async getMessages() {\n    const messages = await ChatMessage.getAllByChatId(this.id);\n    this.messages = messages;\n    return this.messages;\n  }\n\n  static async initialize() {\n    await this.database('ChatApp', ['chats']);\n  }\n\n  static async clear() {\n    await ChatMessage.clear();\n    await super.clear();\n  }\n\n  static async get(id) {\n    const chat = await super.get(id);\n\n    /*\n    if (chat) {\n      // Fetch all messages for this chat\n      const messages = await ChatMessage.getAllByChatId(id);\n      chat.messages = messages;\n    }\n    */\n\n    return chat;\n  }\n\n  static async delete(id) {\n    // Delete the chat instance\n    await super.delete(id);\n\n    // Delete all associated messages\n    const messages = await ChatMessage.getAllByChatId(id);\n    for (const message of messages) {\n      await message.delete();\n    }\n  }\n}\n","import { Database } from '../Database.js';\nimport { Migrations } from '../Migrations.js';\n\nexport class BaseModel {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  async create() {\n    const key = await this.constructor.db.add(this.constructor.storeName, this);\n    if (!this.id) {\n      this.id = key;\n    }\n    return this;\n  }\n\n  async save() {\n    return await this.constructor.db.put(this.constructor.storeName, this);\n  }\n\n  async delete() {\n    return await this.constructor.db.delete(\n      this.constructor.storeName,\n      this.id,\n    );\n  }\n\n  jsonify() {\n    return JSON.stringify(this);\n  }\n\n  static async database(name, store) {\n    this.dbName = name;\n    this.storeName = store;\n    this.db = new Database(name, [store], Migrations);\n    await this.db.open();\n  }\n\n  static async transaction(mode) {\n    return await this.db.transaction(this.storeName, mode);\n  }\n\n  async transaction(mode) {\n    return await this.constructor.transaction(mode);\n  }\n\n  static async get(id) {\n    const data = await this.db.get(this.storeName, id);\n    return new this(data);\n  }\n\n  static async clear() {\n    return await this.db.clear(this.storeName);\n  }\n\n  // TODO: sorting and selecting only certain attributes\n  static async getAll() {\n    const records = await this.db.getAll(this.storeName);\n    return records.map((data) => new this(data));\n  }\n\n  /**\n   * Retrieves all objects associated with a given ID and index.\n   *\n   * @param {number|string} chatId - The ID of the chat.\n   * @returns {Promise<Array>} A promise that resolves to an array.\n   */\n  static async getAllByIndexAndId(indexName, id) {\n    // Open a transaction and access the messages store\n    const transaction = await this.transaction('readonly');\n\n    // Use an index to find objects with the specified id\n    const index = transaction.index(indexName);\n    const request = index.getAll(id);\n\n    return new Promise((resolve, reject) => {\n      request.onsuccess = () => {\n        // Convert the result into instances\n        const messages = request.result.map((data) => new this(data));\n        resolve(messages);\n      };\n      request.onerror = () => {\n        reject(request.error);\n      };\n    });\n  }\n\n  // Exports the whole store\n  static async export() {\n    let transaction = await this.db.transaction(this.storeName, 'readonly');\n    let store = await transaction.transaction.objectStore(this.storeName);\n    return store.getAll();\n  }\n}\n","export class Database {\n  constructor(dbName, objectStores, migrations) {\n    this.dbName = dbName;\n    this.objectStores = objectStores;\n    this.dbConnection = null; // Initialized in open\n    this.migrations = migrations;\n  }\n\n  async open() {\n    if (this.dbConnection) {\n      throw new Error('Connection already open');\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.migrations.version);\n\n      request.onerror = (event) => reject(event.target.error);\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const transaction = event.currentTarget.transaction;\n        this.migrations.upgrade(db, transaction, event.oldVersion);\n      };\n      request.onsuccess = (event) => {\n        this.dbConnection = event.target.result;\n        resolve(this.dbConnection);\n      };\n    });\n  }\n\n  async transaction(storeName, mode) {\n    return this.dbConnection\n      .transaction([storeName], mode)\n      .objectStore(storeName);\n  }\n\n  async add(storeName, data) {\n    const store = await this.transaction(storeName, 'readwrite');\n    return this.handleRequest('add', store.add(data));\n  }\n\n  async get(storeName, id) {\n    const store = await this.transaction(storeName, 'readonly');\n    return this.handleRequest('get', store.get(id));\n  }\n\n  async put(storeName, data) {\n    const store = await this.transaction(storeName, 'readwrite');\n    return this.handleRequest('put', store.put(data));\n  }\n\n  async delete(storeName, id) {\n    const store = await this.transaction(storeName, 'readwrite');\n    return this.handleRequest('delete', store.delete(id));\n  }\n\n  async getAll(storeName) {\n    const store = await this.transaction(storeName, 'readwrite');\n    return this.handleRequest('getAll', store.getAll());\n  }\n\n  async clear(storeName) {\n    const store = await this.transaction(storeName, 'readwrite');\n    return this.handleRequest('deleteAll', store.clear());\n  }\n\n  handleRequest(type, request) {\n    return new Promise((resolve, reject) => {\n      request.onsuccess = () => resolve(request.result);\n\n      request.onerror = (event) => {\n        const error = `Database ${type} operation failed: ${event.target.error.message}`;\n        reject(new Error(JSON.stringify(error)));\n      };\n    });\n  }\n}\n","export class Migrations {\n  static version = 2;\n  static upgrade(database, transaction, oldVersion) {\n    console.debug(\n      `Migration needed. Old version ${oldVersion}. New version ${this.version}.`,\n    );\n    const funcName = `upgradeToVersion${this.version}`;\n    const upgradeFunc = this[funcName];\n    if (!upgradeFunc) {\n      throw new Error(`Upgrade function missing for ${funcName}`);\n    }\n    if (this.version >= oldVersion) {\n      upgradeFunc({ database, transaction });\n    }\n  }\n\n  static upgradeToVersion2(context) {\n    // Create chats\n    context.database.createObjectStore('chats', {\n      keyPath: 'id',\n      autoIncrement: true,\n    });\n    // Create chat_messages\n    const chatMessages = context.database.createObjectStore('chat_messages', {\n      keyPath: 'id',\n      autoIncrement: true,\n    });\n    chatMessages.createIndex('by_chat', 'chatId', { unique: false });\n  }\n}\n","import { BaseModel } from './BaseModel.js';\n\nexport class ChatMessage extends BaseModel {\n  static async initialize() {\n    await this.database('ChatApp', 'chat_messages');\n  }\n\n  static async getAllByChatId(chatId) {\n    return this.getAllByIndexAndId('by_chat', chatId);\n  }\n}\n","import { FilteredList } from './FilteredList.js';\nimport { Event } from './Event.js';\nimport { Models } from './models/Models.js';\n\nexport class ModelsList extends FilteredList {\n  constructor(container) {\n    super(container, Models.getNames());\n    this.bindEventListeners();\n  }\n\n  bindEventListeners() {\n    Event.listen('modelsLoaded', this.handleModelsLoaded.bind(this));\n  }\n\n  handleModelsLoaded() {\n    this.setItems(Models.getNames());\n  }\n\n  static getModels() {\n    return Models.getNames();\n  }\n}\n","import { List } from './List.js';\nimport { DOM } from './DOM.js';\n\nexport class FilteredList extends List {\n  constructor(ul, items) {\n    super(ul, items); // Call the constructor of the parent class\n    this.div = document.createElement('small');\n    this.div.classList.add('hidden', 'p-2');\n    this.ul.prepend(this.div);\n    this.query = null;\n  }\n\n  escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // Escapes special characters\n  }\n\n  render() {\n    super.render();\n  }\n\n  /*\n  selectFirst() {\n    const select = document.querySelector(\n      '#chat-model .chat-model-list li:not(.hidden)',\n    )?.textContent;\n    this.setSelected(select);\n  }\n  */\n\n  filter(searchTerm) {\n    this.query = searchTerm;\n    if (searchTerm === null || searchTerm === undefined) {\n      this.clearFilter();\n      this.filtered = false;\n      return null;\n    }\n    const query = this.escapeRegExp(searchTerm).replace(/\\s+/g, '.*');\n    const regex = new RegExp(query, 'i'); // 'i' for case-insensitive matching\n\n    // Loop through the list items\n    const matches = this.li\n      .map((listItemElement) => {\n        const text = listItemElement.textContent;\n        const match = regex.test(text);\n\n        if (match) {\n          DOM.showElement(listItemElement);\n          return text;\n        } else {\n          DOM.hideElement(listItemElement);\n          return null;\n        }\n      })\n      .filter((match) => match);\n    console.log(`Search ${query}. Matches: ${matches}`);\n\n    // Update text\n    DOM.showElement(this.div);\n    let message = null;\n    if (searchTerm.length < 1) {\n      message = `Continue typing to search models. Showing all models:`;\n    } else {\n      if (matches.length != 0) {\n        message = `Found ${matches.length} model(s) matching '${this.query}'. Click to change chat's model, or press tab to change prompt's model:`;\n      } else {\n        message = `Did not find any models that match '${this.query}'.`;\n      }\n    }\n    this.div.textContent = message;\n\n    return matches;\n  }\n\n  clearFilter() {\n    DOM.hideElement(this.div);\n    this.query = null;\n    this.li.forEach((listItemElement) => {\n      DOM.showElement(listItemElement);\n    });\n  }\n}\n","import { Event } from './Event.js';\nimport { UIElement } from './UIElement.js';\n\nexport class List extends UIElement {\n  constructor(ul, items) {\n    super(ul);\n    this.ul = ul;\n    this.items = items;\n    this.render();\n    this.clickHandler = null;\n    this.ul.classList.add('list');\n  }\n\n  onClick(handler) {\n    this.clickHandler = handler;\n    return this; // Allow chaining\n  }\n\n  setItems(items) {\n    this.items = items;\n    this.render();\n  }\n\n  setSelected(selected) {\n    console.debug(`Select ${selected}`);\n    this.selected = selected;\n    this.li.forEach((item) => {\n      if (item.textContent === selected) {\n        item.classList.add('selected');\n      } else {\n        item.classList.remove('selected');\n      }\n    });\n    Event.emit('select', selected, this.ul);\n  }\n\n  getSelected() {\n    return this.selected;\n  }\n\n  render() {\n    this.ul.innerHTML = ''; // Clear existing content\n    this.li = this.items.map((item) => {\n      const li = document.createElement('li');\n      li.classList.add('list-item');\n      if (item === this.selected) {\n        li.classList.add('selected');\n      }\n      li.textContent = item;\n      li.item = item;\n      li.addEventListener('click', () => {\n        this.setSelected(item);\n        if (this.clickHandler) {\n          this.clickHandler(item);\n        }\n      });\n      this.ul.appendChild(li);\n      return li;\n    });\n  }\n}\n","import { DOM } from './DOM.js';\n\nexport class UIElement {\n  constructor(element) {\n    this.element = element;\n  }\n\n  show() {\n    DOM.showElement(this.element);\n  }\n\n  hide() {\n    DOM.hideElement(this.element);\n  }\n}\n","export class DOM {\n  static showElement(element) {\n    element.classList.remove('hidden');\n    return this;\n  }\n\n  static hideElement(element) {\n    element.classList.add('hidden');\n    return this;\n  }\n\n  static enableInput(element) {\n    element.removeAttribute('disabled');\n    return this;\n  }\n\n  static disableInput(element) {\n    element.setAttribute('disabled', 'disabled');\n    return this;\n  }\n}\n","import { Event } from '../Event.js';\nimport { Settings } from './Settings.js';\nimport { OllamaApi } from '../OllamaApi.js';\n\nexport class Models {\n  // TODO: Get this from the settings?\n  static models = [];\n\n  static getUrl() {\n    return Settings.getUrl('/api/tags');\n  }\n\n  static load() {\n    if (!this.getUrl()) {\n      return null;\n    }\n    return OllamaApi.getModels(this.getUrl(), (models) => {\n      Models.models = models;\n      // Cache list of models\n      Settings.set('models', Models.models);\n      Event.emit('modelsLoaded', Models.models);\n    });\n  }\n\n  static getAll() {\n    return Settings.get('models');\n  }\n\n  static getNames() {\n    const models = this.getAll();\n    if (!models) {\n      return [];\n    }\n    return models.map((model) => model.name);\n  }\n\n  static findModelByName(name) {\n    return this.getAll().find((model) => model.name === name);\n  }\n}\n","export class OllamaApi {\n  constructor() {\n    this.abortController = null;\n  }\n\n  async makeRequest(chat, model, userMessage, systemPrompt, modelParameters) {\n    const requestData = {\n      prompt: userMessage,\n      model: model,\n      messages: (await chat.getMessages()).map((message) => ({\n        role: message.role,\n        content: message.content,\n      })),\n    };\n    // Add system prompt\n    if (systemPrompt) {\n      requestData.system = systemPrompt;\n    }\n    // Add model parameters\n    if (modelParameters) {\n      requestData.options = modelParameters;\n    }\n    return requestData;\n  }\n\n  async send(url, data, onResponse, onError, onDone) {\n    const request = { data };\n    try {\n      const response = await this.postChatMessage(url, data);\n      await this.handleResponse(request, response, onResponse, onDone);\n    } catch (error) {\n      onError(request, error);\n    }\n  }\n\n  async postChatMessage(url, data) {\n    this.abortController = new AbortController();\n    const { signal } = this.abortController;\n    const response = await fetch(url, {\n      signal,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`${url} failed with status ${response.status}`);\n    }\n\n    return response;\n  }\n\n  async handleResponse(request, response, onResponse, onDone) {\n    const reader = response.body.getReader();\n    let partialLine = '';\n    var isRequestDone = false;\n\n    while (!isRequestDone) {\n      const { done, value } = await reader.read();\n      if (done) {\n        onDone(request, response);\n        isRequestDone = true;\n        continue;\n      }\n\n      const textChunk = new TextDecoder().decode(value);\n      const lines = (partialLine + textChunk).split('\\n');\n      partialLine = lines.pop();\n\n      lines.forEach((line) => {\n        const responseData = JSON.parse(line);\n        if (line.trim()) {\n          // TODO: Move this line:\n          this.printResponseStats(responseData);\n          onResponse(request, responseData.message.content);\n        }\n      });\n    }\n\n    if (partialLine.trim()) {\n      onResponse(request, partialLine);\n    }\n  }\n\n  abort() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n  }\n\n  printResponseStats(data) {\n    if (!data.total_duration) {\n      return;\n    }\n    // Convert nanoseconds to seconds for durations\n    const totalDurationInSeconds = data.total_duration / 1e9;\n    const loadDurationInSeconds = data.load_duration / 1e9;\n    const promptEvalDurationInSeconds = data.prompt_eval_duration / 1e9;\n    const responseEvalDurationInSeconds = data.eval_duration / 1e9;\n\n    // Calculate tokens per second (token/s)\n    const tokensPerSecond = data.eval_count / responseEvalDurationInSeconds;\n    const output = `\nModel: ${data.model}\nCreated At: ${data.created_at}\nTotal Duration (s): ${totalDurationInSeconds.toFixed(2)}\nLoad Duration (s): ${loadDurationInSeconds.toFixed(2)}\nPrompt Evaluation Count: ${data.prompt_eval_count}\nPrompt Evaluation Duration (s): ${promptEvalDurationInSeconds.toFixed(2)}\nResponse Evaluation Count: ${data.eval_count}\nResponse Evaluation Duration (s): ${responseEvalDurationInSeconds.toFixed(2)}\nTokens Per Second: ${tokensPerSecond.toFixed(2)} token/s\n    `;\n    console.log(output);\n  }\n\n  static getModels(url, onResponse) {\n    if (!url) {\n      return null;\n    }\n\n    return fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Unable to fetch models from ${url}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        onResponse(data.models);\n      })\n      .catch((error) => {\n        console.debug(error);\n        console.error(\n          `Please ensure the server is running at: ${url}. Error code: 39847`,\n        );\n        onResponse([]);\n      });\n  }\n}\n","import { UINotification } from './UINotification.js';\nimport { Event } from './Event.js';\nimport { Chat } from './models/Chat.js';\nimport { ChatMessage } from './models/ChatMessage.js';\nimport { Settings } from './models/Settings.js';\n\n// TODO: Move all actions here?\n// TODO: Cache current chat here\nexport class AppController {\n  static async updateChat(chat, data) {\n    Object.assign(chat, data);\n    await chat.save();\n    // TODO: Move to BaseModel\n    Event.emit('chatUpdated', chat);\n  }\n\n  static async createChat(data) {\n    if (!data) {\n      data = {};\n    }\n    if (!data.title) {\n      data.title = 'Untitled';\n    }\n    if (!data.model) {\n      data.model = Settings.getModel();\n    }\n    const chat = await new Chat(data).create();\n    Settings.setCurrentChatId(chat.id);\n    Event.emit('chatCreated', chat);\n    Event.emit('chatSelected', chat);\n    return chat;\n  }\n\n  static async deleteChatMessage(messageId) {\n    UINotification.show('Deleted message').autoDismiss();\n    const message = await ChatMessage.get(messageId);\n    message.delete();\n  }\n\n  static async deleteChat(chat) {\n    await chat.delete();\n    if (Settings.getCurrentChatId() === chat.id) {\n      Settings.setCurrentChatId(null);\n    }\n    Event.emit('chatDeleted', chat);\n  }\n\n  static async getCurrentChat() {\n    const chatId = this.getCurrentChatId();\n    if (chatId) {\n      return await Chat.get(chatId);\n    }\n    return null;\n  }\n\n  static getCurrentChatId() {\n    return Settings.get('currentChatId');\n  }\n\n  static async setCurrentChat(chat) {\n    Settings.setCurrentChatId(chat.id);\n    Event.emit('chatSelected', chat);\n  }\n\n  static async setCurrentChatId(chatId) {\n    const chat = await Chat.get(chatId);\n    if (chat) {\n      await this.setCurrentChat(chat);\n    }\n  }\n\n  static async clearChats() {\n    Settings.setCurrentChatId(null);\n    await Chat.clear();\n    Event.emit('chatsCleared');\n  }\n}\n","import { Event } from './Event.js';\nimport { ChatListItem } from './ChatListItem.js';\nimport { DragAndDrop } from './DragAndDrop.js';\nimport { Chat } from './models/Chat.js';\nimport { AppController } from './AppController.js';\n\nexport class ChatList {\n  constructor() {\n    this.element = document.getElementById('chat-list');\n    this.template = document.getElementById('chat-list-item-template').content;\n    this.bindEventListeners();\n    AppController.getCurrentChat().then((chat) => {\n      this.chat = chat;\n    });\n  }\n\n  bindEventListeners() {\n    Event.listen('chatCreated', this.handleChatCreated.bind(this));\n    Event.listen('chatDeleted', this.handleChatDeleted.bind(this));\n    Event.listen('chatsCleared', this.handleChatsCleared.bind(this));\n    Event.listen('chatUpdated', this.handleChatUpdated.bind(this));\n    Event.listen('chatSelected', this.handleChatSelected.bind(this));\n  }\n\n  async selectChat(chatId) {\n    await AppController.setCurrentChatId(chatId);\n  }\n\n  handleChatCreated(chat) {\n    this.appendChat(chat, true);\n  }\n\n  handleChatDeleted(chat) {\n    if (this.chat?.id === chat.id) {\n      this.chat = null;\n    }\n    this.element.querySelector(`.chat${chat.id}`)?.remove();\n  }\n\n  handleChatsCleared() {\n    const elements = this.element.querySelectorAll('.chat-list-item');\n    elements.forEach((element) => element.remove());\n  }\n\n  handleChatUpdated(chat) {\n    const listElement = this.element.querySelector(\n      `.chat${chat.id} .chat-title`,\n    );\n    if (listElement) {\n      listElement.textContent = chat.title;\n    }\n  }\n\n  handleChatSelected(chat) {\n    if (this.chat) {\n      const previousListElement = this.element.querySelector(\n        `.chat${this.chat.id}`,\n      );\n      if (previousListElement) {\n        previousListElement.classList.remove('selected');\n      }\n    }\n    const newListElement = this.element.querySelector(`.chat${chat.id}`);\n    if (newListElement) {\n      newListElement.classList.add('selected');\n    }\n    // Remember selected chat\n    this.chat = chat;\n  }\n\n  render() {\n    const currentChatId = AppController.getCurrentChatId();\n    this.element.innerHTML = '';\n    Chat.getAll().then((chats) => {\n      chats.forEach((chat) => {\n        const selected = chat.id === currentChatId;\n        this.appendChat(chat, selected);\n      });\n      new DragAndDrop('.chat-list-item');\n    });\n  }\n\n  appendChat(chat, selected) {\n    const chatListItem = new ChatListItem(chat, this, selected);\n    this.element.appendChild(chatListItem.element);\n    return chatListItem;\n  }\n}\n","import { AppController } from './AppController.js';\n\nexport class ChatListItem {\n  constructor(chat, chatList, selected) {\n    this.chat = chat;\n    this.chatList = chatList;\n    this.content = document\n      .getElementById('chat-list-item-template')\n      .content.cloneNode(true);\n    this.element = this.content.querySelector('.chat-list-item');\n    this.element.title = this.chat.title;\n    this.element.data = { id: this.chat.id };\n    this.element.classList.add(`chat${this.chat.id}`);\n    if (selected === true) {\n      this.element.classList.add('selected');\n      // this.content.querySelector('.icon-selected').classList.remove('hidden')\n    }\n    this.setTitle();\n    this.bindEventListeners();\n  }\n\n  render() {}\n\n  bindEventListeners() {\n    this.element.addEventListener('mouseover', this.onMouseover.bind(this));\n    this.element.addEventListener('mouseout', this.onMouseout.bind(this));\n    this.element.addEventListener('click', this.onClick.bind(this));\n    this.element\n      .querySelector('.list-item-delete')\n      .addEventListener('click', this.deleteChat.bind(this));\n  }\n\n  onMouseover() {\n    this.element.classList.add('hover');\n  }\n\n  onMouseout() {\n    this.element.classList.remove('hover');\n  }\n\n  onClick() {\n    this.chatList.selectChat(this.chat.id);\n  }\n\n  setTitle() {\n    const chatTitle = this.content.querySelector('.chat-title');\n    chatTitle.textContent = this.chat.title;\n  }\n\n  deleteChat() {\n    AppController.deleteChat(this.chat);\n    this.element.remove();\n  }\n}\n","export class DragAndDrop {\n  constructor(selector) {\n    this.listItems = document.querySelectorAll(selector);\n    this.draggedItem = null;\n    this.initializeDragAndDrop();\n  }\n\n  initializeDragAndDrop() {\n    this.listItems.forEach((item) => {\n      item.addEventListener('dragstart', this.handleDragStart.bind(this, item));\n      item.addEventListener('dragover', this.handleDragOver.bind(this));\n      item.addEventListener('drop', this.handleDrop.bind(this, item));\n      item.addEventListener('dragend', this.handleDragEnd.bind(this));\n    });\n  }\n\n  handleDragStart(item) {\n    this.draggedItem = item;\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n  }\n\n  handleDrop(item) {\n    if (item !== this.draggedItem) {\n      let currentHTML = item.innerHTML;\n      item.innerHTML = this.draggedItem.innerHTML;\n      this.draggedItem.innerHTML = currentHTML;\n      console.debug('dnd drop');\n    }\n  }\n\n  handleDragEnd() {\n    this.draggedItem = null;\n  }\n}\n","import { Chat } from './models/Chat.js';\nimport { ChatMessage } from './models/ChatMessage.js';\n\nexport class DownloadChatsButton {\n  constructor() {\n    this.button = document.querySelector('#export-button');\n    this.bindEventListeners();\n  }\n\n  bindEventListeners() {\n    this.button.addEventListener('click', () => {\n      this.exportChat();\n      this.exportChatMessages();\n    });\n  }\n\n  async exportChat() {\n    const request = await Chat.export();\n\n    request.onsuccess = function () {\n      let data = request.result;\n\n      // Convert the data to JSON format\n      let jsonData = JSON.stringify(data, 2);\n\n      // Export the JSON data by creating a file to download\n      let blob = new Blob([jsonData], { type: 'application/json' });\n      let url = URL.createObjectURL(blob);\n\n      let a = document.createElement('a');\n      a.href = url;\n      a.download = 'chats.json';\n      a.click();\n      URL.revokeObjectURL(url);\n    };\n\n    request.onerror = function (event) {\n      console.error('Error reading data: ', event.target.errorCode);\n    };\n  }\n\n  async exportChatMessages() {\n    const request = await ChatMessage.export();\n\n    request.onsuccess = function () {\n      let data = request.result;\n\n      // Convert the data to JSON format\n      let jsonData = JSON.stringify(data, 2);\n\n      // Export the JSON data by creating a file to download\n      let blob = new Blob([jsonData], { type: 'application/json' });\n      let url = URL.createObjectURL(blob);\n\n      let a = document.createElement('a');\n      a.href = url;\n      a.download = 'chat_messages.json';\n      a.click();\n      URL.revokeObjectURL(url);\n    };\n\n    request.onerror = function (event) {\n      console.error('Error reading data: ', event.target.errorCode);\n    };\n  }\n}\n","export class LocalStorage {\n  // Set a value in localStorage\n  set(key, value) {\n    try {\n      const stringValue = JSON.stringify(value);\n      localStorage.setItem(key, stringValue);\n    } catch (e) {\n      console.error('Error saving to localStorage', e);\n    }\n  }\n\n  // Get a value from localStorage, return defaultValue if key doesn't exist\n  get(key, defaultValue = null) {\n    try {\n      const value = localStorage.getItem(key);\n      return value !== null ? JSON.parse(value) : defaultValue;\n    } catch (e) {\n      console.error('Error reading from localStorage', e);\n      return defaultValue;\n    }\n  }\n\n  // Remove a value from localStorage\n  remove(key) {\n    try {\n      localStorage.removeItem(key);\n    } catch (e) {\n      console.error('Error removing from localStorage', e);\n    }\n  }\n}\n","import { UINotification } from './UINotification.js';\n\nexport class CopyButton {\n  constructor() {\n    document.addEventListener('click', (event) => {\n      // Check if the clicked element has the class 'copy-button'\n      if (event.target.classList.contains('copy-button')) {\n        const targetSelector = event.target.getAttribute('data-target');\n        if (!targetSelector) {\n          console.error('The data-target attribute is not set');\n          return;\n        }\n        const textToCopy = document.getElementById(targetSelector).innerText;\n        // Create a temporary textarea element\n        const textarea = document.createElement('textarea');\n        textarea.value = textToCopy;\n        document.body.appendChild(textarea);\n\n        // Select the text and copy it\n        textarea.select();\n        document.execCommand('copy');\n\n        // Remove the temporary textarea\n        document.body.removeChild(textarea);\n\n        UINotification.show('Text copied to clipboard').autoDismiss();\n      }\n    });\n  }\n}\n","export class DownloadButton {\n  constructor() {\n    document.addEventListener('click', (event) => {\n      // Check if the clicked element has the class 'copy-button'\n      if (event.target.classList.contains('download-button')) {\n        // Get the index from the data-target attribute\n        const targetId = event.target.getAttribute('data-target');\n        this.downloadElementContent(targetId, 'chat.html');\n      }\n    });\n  }\n\n  downloadElementContent(elementId, filename) {\n    // Get the element\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.error('Element not found');\n      return;\n    }\n\n    // Get the contents of the element\n    const content = element.innerText;\n\n    // Create a Blob with the content\n    const blob = new Blob([content], { type: 'text/html' });\n\n    // Create an anchor element and set the href to the blob\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = filename;\n\n    // Append the anchor to the document, trigger a click, and then remove it\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    // Revoke the blob URL\n    URL.revokeObjectURL(a.href);\n  }\n}\n","export class DropDownMenu {\n  constructor() {\n    this.buttonSelector = '.drop-down-menu';\n    this.dropDownMenus = document.querySelectorAll(this.buttonSelector);\n    this.init();\n  }\n\n  init() {\n    // Add a click listener to the whole document\n    document.addEventListener('click', (event) => {\n      // Check if the clicked element or any of its parents has the 'drop-down-menu' class\n      const menuElement = event.target.closest(this.buttonSelector);\n      if (menuElement) {\n        const dropDownMenu = menuElement.querySelector('.drop-down-menu-items');\n        if (dropDownMenu) {\n          this.toggleMenu(dropDownMenu);\n        }\n      }\n    });\n  }\n\n  toggleMenu(menu) {\n    menu.classList.toggle('hidden');\n    menu.classList.toggle('visible');\n  }\n}\n","import { Modal } from './Modal.js';\nimport { UINotification } from './UINotification.js';\nimport { ModelsList } from './ModelsList.js';\nimport { Models } from './models/Models.js';\nimport { Settings } from './models/Settings.js';\n\nexport class SettingsDialog extends Modal {\n  constructor(options) {\n    super(options);\n    this.showButton = document.getElementById(options.buttonId);\n    this.urlInput = this.modal.querySelector('#input-url');\n    this.modelInput = this.modal.querySelector('#input-model');\n    this.systemPromptInput = this.modal.querySelector('#input-system-prompt');\n    this.modelParametersInput = this.modal.querySelector(\n      '#input-model-parameters',\n    );\n    this.refreshModelsButton = this.modal.querySelector(\n      '.refresh-models-button',\n    );\n    this.modelList = new ModelsList(this.modal.querySelector('#model-list'));\n    this.bindEventListeners();\n  }\n\n  getSelected() {\n    return Settings.getModel();\n  }\n\n  bindEventListeners() {\n    this.urlInput.addEventListener('blur', this.handleUrlUpdated.bind(this));\n    this.systemPromptInput.addEventListener(\n      'blur',\n      this.handleSystemPromptUpdated.bind(this),\n    );\n    this.modelParametersInput.addEventListener('blur', () =>\n      this.handleModelParametersUpdated.bind(this),\n    );\n    this.modelList.onClick(this.handleModelUpdated.bind(this));\n    this.showButton.addEventListener('click', this.show.bind(this));\n    this.refreshModelsButton.addEventListener(\n      'click',\n      this.refreshModels.bind(this),\n    );\n    this.closeButton.addEventListener('click', this.hide.bind(this));\n  }\n\n  handleSystemPromptUpdated() {\n    Settings.setSystemPrompt(this.systemPromptInput.value.trim());\n  }\n\n  handleModelUpdated() {\n    Settings.setModel(this.modelList.getSelected());\n  }\n\n  handleModelParametersUpdated() {\n    const value = this.modelParametersInput.value.trim();\n    if (value === '') {\n      return;\n    }\n    try {\n      const parsedValue = JSON.parse(value);\n      const prettyJSON = JSON.stringify(parsedValue, 2);\n      Settings.setModelParameters(parsedValue);\n      this.modelParametersInput.value = prettyJSON;\n      this.modelParametersInput.classList.remove('error');\n    } catch (error) {\n      if (error.name === 'SyntaxError') {\n        this.modelParametersInput.classList.add('error');\n      } else {\n        console.error(error);\n      }\n    }\n  }\n\n  handleUrlUpdated() {\n    const value = this.urlInput.value.trim();\n    Settings.setUrl(value);\n  }\n\n  show() {\n    this.loadSettings();\n    Models.load();\n    this.handleShow();\n  }\n\n  refreshModels() {\n    if (!Models.getUrl()) {\n      UINotification.show('Please update the URL in the settings to continue.');\n    } else {\n      Models.load();\n    }\n  }\n\n  loadSettings() {\n    this.modelList.setSelected(this.getSelected());\n    this.urlInput.value = Settings.getUrl();\n    const modelParameters = Settings.getModelParameters();\n    if (modelParameters) {\n      this.modelParametersInput.value = JSON.stringify(modelParameters, 2);\n    }\n  }\n}\n","// Modal base class\nexport class Modal {\n  constructor(options) {\n    this.domId = options.domId;\n    this.templateId = options.templateId;\n    this.modal = this.createDialogElement();\n    this.titleElement = this.modal.querySelector('.modal-title');\n    this.closeButton = this.modal.querySelector('.button-close');\n    this.closeButton.onclick = () => this.hide();\n    this._bindEventListeners();\n    this.setTitle(options.title);\n  }\n\n  setTitle(title) {\n    this.titleElement.textContent = title;\n  }\n\n  _bindEventListeners() {\n    this.modal.addEventListener('click', (event) => {\n      if (event.target == this.modal) {\n        this.hide();\n      }\n    });\n    window.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        this.hide();\n      }\n    });\n  }\n\n  createDialogElement() {\n    const template = document.getElementById(this.templateId);\n    if (!template) {\n      console.error(`Template with ID ${this.templateId} not found.`);\n      return;\n    }\n\n    const clone = template.content.cloneNode(true);\n    const modalElement = clone.firstElementChild;\n    modalElement.id = this.domId;\n\n    if (!modalElement) {\n      console.error(\n        `No modal element found in the template with ID ${this.templateId}.`,\n      );\n      return;\n    }\n\n    document.body.appendChild(modalElement);\n\n    return modalElement;\n  }\n\n  show() {\n    this.handleShow();\n  }\n\n  hide() {\n    this.handleHide();\n  }\n\n  handleShow() {\n    this.modal.classList.add('show');\n  }\n\n  handleHide() {\n    this.modal.classList.remove('show');\n  }\n}\n","import { AppController } from './AppController.js';\nimport { SettingsDialog } from './SettingsDialog.js';\nimport { Settings } from './models/Settings.js';\n\nexport class ChatSettingsDialog extends SettingsDialog {\n  constructor(options) {\n    super(options);\n  }\n\n  getSelected() {\n    return this.chat?.model;\n  }\n\n  async handleSystemPromptUpdated() {\n    this.chat.systemPrompt = this.systemPromptInput.value.trim();\n    await this.chat.save();\n  }\n\n  async handleModelUpdated() {\n    this.chat.model = this.modelList.getSelected();\n    await this.chat.save();\n  }\n\n  async handleModelParametersUpdated() {\n    this.chat.modelParameters = this.modelParametersInput.value.trim();\n    await this.chat.save();\n  }\n\n  async handleUrlUpdated() {\n    this.chat.url = this.urlInput.value.trim();\n    await this.chat.save();\n  }\n\n  loadSettings() {\n    AppController.getCurrentChat().then((chat) => {\n      this.modelList.setSelected(chat.model);\n      this.chat = chat;\n      this.urlInput.value = this.chat.url || Settings.getUrl();\n      const modelParameters =\n        this.chat.modelParameters || Settings.getModelParameters();\n      if (modelParameters) {\n        this.modelParametersInput.value = JSON.stringify(modelParameters, 2);\n      }\n    });\n  }\n}\n","import { UINotification } from './UINotification.js';\nimport { AppController } from './AppController.js';\nimport { AtSymbolListener } from './AtSymbolListener.js';\nimport { ExportChat } from './ExportChat.js';\nimport { Event } from './Event.js';\nimport { Hoverable } from './Hoverable.js';\nimport { ChatTitle } from './ChatTitle.js';\nimport { ChatForm } from './ChatForm.js';\nimport { ModelsList } from './ModelsList.js';\n\nexport class ChatArea {\n  constructor() {\n    this.chatTitle = new ChatTitle();\n    this.chatForm = new ChatForm();\n    this.chatHistory = document.getElementById('chat-history');\n    this.messageInput = document.getElementById('message-input');\n    this.editChatButton = document.getElementById('edit-chat-button');\n    this.chatModel = document.getElementById('chat-model');\n    this.modelName = this.chatModel.querySelector('.chat-model-name');\n    this.scrollToTopButton = document.getElementById('scroll-to-top-button');\n    this.scrollToEndButton = document.getElementById('scroll-to-end-button');\n    this.deleteChatButton = document.getElementById('delete-chat-button');\n    this.exportChatButton = document.getElementById('export-chat-button');\n    this.modelList = new ModelsList(\n      this.chatModel.querySelector('.chat-model-list'),\n    ).onClick(this.handleModelSelected.bind(this));\n    new AtSymbolListener(\n      this.messageInput,\n      this.modelList,\n      this.handleModelSelected.bind(this),\n    );\n    AppController.getCurrentChat().then((chat) => {\n      if (!chat) {\n        return;\n      }\n      this.chat = chat;\n      this.render();\n    });\n    this.bindEventListeners();\n  }\n\n  render() {\n    // Clear history view\n    this.chatHistory.innerText = '';\n    if (this.chat) {\n      // Show model name in \"talking to\"\n      this.modelName.textContent = this.chat.model;\n      // Update list of models\n      this.modelList.setSelected(this.chat.model);\n      this.chat // Render chat history\n        .getMessages()\n        .then((messages) => {\n          messages.forEach((message) => {\n            this.createMessageDiv(message);\n          });\n        });\n      this.scrollToEnd();\n    }\n    this.messageInput.focus();\n  }\n\n  bindEventListeners() {\n    Event.listen('chatSelected', this.handleChatSelected.bind(this));\n    Event.listen('chatDeleted', this.handleChatDeleted.bind(this));\n    this.scrollToTopButton.addEventListener(\n      'click',\n      this.scrollToTop.bind(this),\n    );\n    this.scrollToEndButton.addEventListener(\n      'click',\n      this.scrollToEnd.bind(this),\n    );\n    this.editChatButton.addEventListener(\n      'click',\n      this.handleEditChat.bind(this),\n    );\n    this.deleteChatButton.addEventListener(\n      'click',\n      this.handleDeleteChat.bind(this),\n    );\n    this.exportChatButton.addEventListener('click', () => {\n      ExportChat.exportChat(this.chat, `chat-${this.chat.id}.json`);\n    });\n    this.currentMessage = this.chatHistory.querySelector('.selected');\n    // Select chat message with arrow up and arrow down keys\n    document.addEventListener('keydown', (event) => {\n      let next, previous;\n\n      if (event.key === 'ArrowDown') {\n        next = this.currentMessage\n          ? this.currentMessage.nextElementSibling\n          : this.chatHistory.firstElementChild;\n        if (next) {\n          if (this.currentMessage)\n            this.currentMessage.classList.remove('hover');\n          next.classList.add('hover');\n          this.currentMessage = next; // Update currentMessage\n          this.currentMessage.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          }); // Scroll into view\n        }\n      } else if (event.key === 'ArrowUp') {\n        previous = this.currentMessage\n          ? this.currentMessage.previousElementSibling\n          : this.chatHistory.lastElementChild;\n        if (previous) {\n          if (this.currentMessage)\n            this.currentMessage.classList.remove('hover');\n          previous.classList.add('hover');\n        }\n        this.currentMessage = previous; // Update currentMessage\n        this.currentMessage.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n        }); // Scroll into view\n      }\n    });\n  }\n\n  createMessageDiv(message) {\n    const domId = `chat-message-${message.id}`;\n    const role = message.role;\n    const content = message.content;\n    // Get the template and its content\n    const template = document.getElementById('chat-message-template');\n    const messageClone = template.content.cloneNode(true);\n    // Find the div and span elements within the cloned template\n    const messageDiv = messageClone.querySelector('.chat-message');\n    const textSpan = messageClone.querySelector('.chat-message-text');\n    const deleteButton = messageClone.querySelector(\n      '.delete-chat-message-button',\n    );\n    const copyButton = messageClone.querySelector(\n      '.copy-chat-message-button .copy-button',\n    );\n    const goodButton = messageClone.querySelector('.good-chat-message-button');\n    const badButton = messageClone.querySelector('.bad-chat-message-button');\n    const flagButton = messageClone.querySelector('.flag-chat-message-button');\n\n    if (message.quality == 'bad') {\n      badButton.classList.add('selected');\n    } else if (message.quality == 'good') {\n      goodButton.classList.add('selected');\n    } else if (message.quality == 'flagged') {\n      flagButton.classList.add('selected');\n    }\n\n    // Set the class for role and text content\n    messageDiv.classList.add(`${role}-chat-message`);\n    messageDiv.id = domId;\n    textSpan.textContent = content;\n    messageDiv.spellcheck = false;\n\n    // Append to chatHistory and adjust scroll\n    this.chatHistory.appendChild(messageDiv);\n    messageDiv.dataset['id'] = message.id;\n    new Hoverable(messageDiv);\n    deleteButton.addEventListener('click', async () => {\n      await AppController.deleteChatMessage(message.id);\n      messageDiv.remove();\n    });\n    copyButton.dataset['target'] = domId;\n    flagButton.addEventListener('click', async () => {\n      UINotification.show('Flagged message').autoDismiss();\n      message.quality = 'flagged';\n      await message.save();\n    });\n    goodButton.addEventListener('click', async () => {\n      UINotification.show('Marked message as good').autoDismiss();\n      message.quality = 'good';\n      await message.save();\n    });\n    badButton.addEventListener('click', async () => {\n      UINotification.show('Marked message as bad').autoDismiss();\n      message.quality = 'bad';\n      await message.save();\n    });\n    return { element: messageDiv, textElement: textSpan };\n  }\n\n  handleChatDeleted(chat) {\n    if (chat.id === this.chat?.id) {\n      this.chat = null;\n    } else {\n      this.chat = chat;\n    }\n    this.render();\n  }\n\n  async handleModelSelected(selected) {\n    const chat = await AppController.getCurrentChat();\n    this.modelName.textContent = selected;\n    AppController.updateChat(chat, { model: selected });\n  }\n\n  handleChatSelected(chat) {\n    this.chat = chat;\n    this.render();\n  }\n\n  handleEditChat() {\n    this.chatTitle.focus();\n    event.stopPropagation();\n  }\n\n  async handleDeleteChat() {\n    const chat = await AppController.getCurrentChat();\n    if (chat) {\n      await AppController.deleteChat(chat);\n    }\n  }\n\n  scrollToTop() {\n    this.chatHistory.scrollTop = 0;\n  }\n\n  scrollToEnd() {\n    this.chatHistory.scrollTop = this.chatHistory.scrollHeight;\n  }\n}\n","import { Event } from './Event.js';\n\nexport class AtSymbolListener {\n  constructor(input, target, onSelected) {\n    if (!target) {\n      throw Error('No target element specified');\n    }\n    this.active = false;\n    this.onSelected = onSelected;\n    this.input = input;\n    this.target = target;\n    this.bindEventListeners();\n  }\n\n  bindEventListeners() {\n    this.input.addEventListener('input', () => this.handleInput());\n    this.input.addEventListener('keydown', (e) => this.handleKeydown(e));\n    Event.listen('select', this.handleSelected.bind(this), this.ul);\n  }\n\n  handleInput() {\n    const text = this.getText();\n    const lastChar = text[text.length - 1];\n\n    // Handle show and hide using special characters\n    if (lastChar === '@') {\n      this.showTarget();\n    }\n\n    // Handle search if active\n    if (this.active) {\n      const searchTerm = this.getSearchTerm();\n      if (!this.target.filter(searchTerm)) {\n        // TODO: Show ”No matches” instead of hiding\n        this.hideTarget();\n      }\n    }\n  }\n\n  getText() {\n    return this.input.value.trim();\n  }\n\n  getSearchTerm() {\n    const text = this.getText();\n    const lastAtPos = text.lastIndexOf('@');\n    const query = lastAtPos !== -1 ? text.substring(lastAtPos + 1) : null;\n    return query;\n  }\n\n  handleKeydown(event) {\n    const key = event.key;\n\n    // Select first item on tab\n    if (event.which == 9 && this.active) {\n      const select =\n        this.target.element.querySelector('li:not(.hidden)')?.textContent;\n      this.handleSelected(select);\n\n      event.preventDefault();\n    } else if (key === ' ' || key === 'Enter' || key === 'Escape') {\n      this.hideTarget();\n    }\n  }\n\n  handleSelected(selected) {\n    if (selected === null || selected === undefined) {\n      return;\n    }\n    if (!this.active) {\n      return;\n    }\n    const text = this.getText();\n    const lastAtPos = text.lastIndexOf('@');\n    if (lastAtPos !== -1) {\n      this.input.value = text.substring(0, lastAtPos + 1) + selected;\n      this.input.focus();\n      this.input.setSelectionRange(\n        this.input.value.length,\n        this.input.value.length,\n      );\n      // this.onSelected(selected);\n      this.hideTarget();\n    }\n  }\n\n  showTarget() {\n    this.active = true;\n    this.target.element.classList.add('active');\n    this.target.show();\n  }\n\n  hideTarget() {\n    this.active = false;\n    this.target.element.classList.remove('active');\n    this.target.hide();\n  }\n}\n","export class ExportChat {\n  static exportChat(chat, filename) {\n    // Get the contents of the element\n    const content = chat.jsonify();\n\n    // Create a Blob with the content\n    const blob = new Blob([content], { type: 'application/json' });\n\n    // Create an anchor element and set the href to the blob\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = filename;\n\n    // Append the anchor to the document, trigger a click, and then remove it\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    // Revoke the blob URL\n    URL.revokeObjectURL(a.href);\n  }\n}\n","export class Hoverable {\n  constructor(element) {\n    this.element = element;\n    element.hoverable = this;\n    this.bindEventListeners();\n  }\n\n  bindEventListeners() {\n    this.element.addEventListener('mouseover', () => this.onMouseover());\n    this.element.addEventListener('mouseout', () => this.onMouseout());\n  }\n\n  onMouseover() {\n    this.element.classList.add('hover');\n  }\n\n  onMouseout() {\n    this.element.classList.remove('hover');\n  }\n}\n","import { Event } from './Event.js';\nimport { AppController } from './AppController.js';\n\nexport class ChatTitle {\n  constructor() {\n    this.defaultTitle = 'Untitled';\n    this.element = document.getElementById('chat-title');\n    this.bindEventListeners();\n    this.render();\n  }\n\n  render() {\n    AppController.getCurrentChat().then((chat) => {\n      this.chat = chat;\n      this.setTitle(chat?.title);\n    });\n  }\n\n  setTitle(title) {\n    this.element.textContent = title || this.defaultTitle;\n  }\n\n  focus() {\n    const hasFocus = document.activeElement === this.element;\n    if (!hasFocus) {\n      this.element.focus();\n    }\n  }\n\n  bindEventListeners() {\n    Event.listen('chatDeleted', this.handleChatDeleted.bind(this));\n    Event.listen('chatSelected', this.handleChatSelected.bind(this));\n    this.element.addEventListener('blur', this.handleSave.bind(this));\n    this.element.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.element.blur();\n      }\n    });\n  }\n\n  handleChatSelected(chat) {\n    this.chat = chat;\n    this.setTitle(chat.title);\n  }\n\n  handleChatDeleted(chat) {\n    if (chat.id === this.chat.id) {\n      this.setTitle(this.defaultTitle);\n    }\n  }\n\n  async handleSave() {\n    let title = this.element.textContent.trim();\n    if (title.length === 0) {\n      title = this.defaultTitle;\n      this.element.classList.add('error');\n    } else {\n      this.element.classList.remove('error');\n    }\n    const chat = await AppController.getCurrentChat();\n    if (chat) {\n      await AppController.updateChat(chat, { title });\n    } else {\n      await AppController.createChat({ title });\n    }\n  }\n}\n","// TODO: Move code here from App.js and ChatArea.js\nexport class ChatForm {\n  constructor() {\n    this.chatHistory = document.getElementById('chat-history');\n    this.messageInput = document.getElementById('message-input');\n    this.sendButton = document.getElementById('send-button');\n    this.abortButton = document.getElementById('abort-button');\n  }\n}\n"],"names":["$d0e57ac33ccf02ae$export$93fa2dff72ea7b22","constructor","message","type","autoDismiss","id","$d0e57ac33ccf02ae$var$simpleHash","str","hash","i","length","charCodeAt","JSON","stringify","domId","container","document","body","template","getElementById","content","_bindEventListeners","window","addEventListener","event","key","hide","setTimeout","show","notification","initialize","originalConsoleError","console","error","args","apply","handleApplicationError","debug","clone","cloneNode","notificationElement","querySelector","textContent","classList","add","closeButton","onclick","appendChild","remove","$6cafd1d766934ced$export$c72f6eaae7b9adff","set","value","stringValue","localStorage","setItem","e","get","defaultValue","getItem","parse","removeItem","getUrl","uri","baseUrl","URL","href","setUrl","url","getModel","setModel","model","getSystemPrompt","setSystemPrompt","systemPrompt","getModelParameters","setModelParameters","modelParameters","getCurrentChatId","setCurrentChatId","chatId","undefined","$89906307e103a6a0$export$d61e24a684f9e51","listen","eventName","handler","target","detail","emit","data","log","CustomEvent","bubbles","dispatchEvent","$9bf0ffc1f90fef06$export$cb0933279c36a66b","showElement","element","hideElement","enableInput","removeAttribute","disableInput","setAttribute","$e3da2d8b324ccdd6$export$61fc7d43ac8f84b0","func","wait","timeout","clearTimeout","$4a7df9533fb2e685$export$6feb5ea51a7b0b47","dbName","objectStores","migrations","dbConnection","open","Error","Promise","resolve","reject","request","indexedDB","version","onerror","onupgradeneeded","db","result","transaction","currentTarget","upgrade","oldVersion","onsuccess","storeName","mode","objectStore","store","handleRequest","put","delete","getAll","clear","$3cac27d4071b6d87$export$22a13653582ad32a","database","funcName","upgradeFunc","upgradeToVersion2","context","createObjectStore","keyPath","autoIncrement","chatMessages","createIndex","unique","$39c6f0c30d166321$export$d12e20a4eec10acf","Object","assign","create","save","jsonify","name","records","map","getAllByIndexAndId","indexName","index","export","$a1d4810cc36cac20$export$423c13fd52bec8ad","getAllByChatId","$0674bb6c85f30ef2$export$d49dffca20dba6f7","addMessage","getMessages","messages","$1c3172bb839daffe$export$cb0933279c36a66b","$887ebe369d7e1bd0$export$f03163d7279986d4","$c93941a806f63188$export$54c2e3dc7acea9f5","ul","items","render","clickHandler","onClick","setItems","setSelected","selected","li","forEach","item","getSelected","innerHTML","createElement","$ddab77ee5f79370a$export$4425cedb09601f99","div","prepend","query","escapeRegExp","string","replace","filter","searchTerm","clearFilter","filtered","regex","RegExp","matches","listItemElement","text","test","match","$22a7c45da799ce5c$export$819c9b9e02ecbeb9","abortController","makeRequest","chat","userMessage","requestData","prompt","role","system","options","send","onResponse","onError","onDone","response","postChatMessage","handleResponse","AbortController","signal","fetch","method","headers","ok","status","reader","getReader","partialLine","isRequestDone","done","read","lines","TextDecoder","decode","split","pop","line","responseData","trim","printResponseStats","abort","total_duration","totalDurationInSeconds","loadDurationInSeconds","load_duration","promptEvalDurationInSeconds","prompt_eval_duration","responseEvalDurationInSeconds","eval_duration","tokensPerSecond","eval_count","created_at","toFixed","prompt_eval_count","getModels","then","json","models","catch","$32aa79be08c85114$export$6edbc060ce567afa","load","getNames","findModelByName","find","$2e71bcaf10bf7d80$export$790259fcca88d44f","bindEventListeners","handleModelsLoaded","bind","$bedd78c623905a1e$export$bd63dc5a00fdc201","updateChat","createChat","title","deleteChatMessage","messageId","deleteChat","getCurrentChat","setCurrentChat","clearChats","$26bc5f9df4a7215f$export$8a74b6c2b6abee5c","chatList","setTitle","onMouseover","onMouseout","selectChat","chatTitle","$3ca20c71cb0d9235$export$a4c936d95bae1613","selector","listItems","querySelectorAll","draggedItem","initializeDragAndDrop","handleDragStart","handleDragOver","handleDrop","handleDragEnd","preventDefault","currentHTML","$cc8724ddd4d9cd0f$export$f3b2d8a9ecf740ec","handleChatCreated","handleChatDeleted","handleChatsCleared","handleChatUpdated","handleChatSelected","appendChat","elements","listElement","previousListElement","newListElement","currentChatId","chats","chatListItem","$55cf77cdfb251cce$export$6e3943ab9bac802","button","exportChat","exportChatMessages","jsonData","blob","Blob","createObjectURL","a","download","click","revokeObjectURL","errorCode","$9d6cd436dcd23c44$export$19fffca37ef3e106","$7f3f2023aee8b38c$export$1ba59dacbcbf90fe","settings","modelList","handleModelSelected","hamburgerButton","searchButton","downloadChatsButton","searchRow","searchInput","modelName","toggleSearch","performSearch","toggle","listItem","scrollIntoView","behavior","block","inline","focus","queryContent","includes","contains","$4469c979f6bfe094$export$4f2558dd25106ae2","targetSelector","getAttribute","textToCopy","innerText","textarea","select","execCommand","removeChild","$4566c9ff6a5f9006$export$fc9722a813484b48","targetId","downloadElementContent","elementId","filename","$699d92be1eba6950$export$ee621bb1988a9f78","buttonSelector","dropDownMenus","init","menuElement","closest","dropDownMenu","toggleMenu","menu","$41758d9174c453e4$export$2b77a92f1a5ad772","templateId","modal","createDialogElement","titleElement","modalElement","firstElementChild","handleShow","handleHide","$e5f295542df33b8b$export$c197ce1a352372f","showButton","buttonId","urlInput","modelInput","systemPromptInput","modelParametersInput","refreshModelsButton","handleUrlUpdated","handleSystemPromptUpdated","handleModelParametersUpdated","handleModelUpdated","refreshModels","parsedValue","prettyJSON","loadSettings","$de0cc8755b89a6ed$export$b1e182b800d07e9d","$213076b68d0eaf82$export$8f23e2f72bfa8e66","input","onSelected","active","handleInput","handleKeydown","handleSelected","getText","showTarget","getSearchTerm","hideTarget","lastAtPos","lastIndexOf","substring","which","setSelectionRange","$4b1afd8af8e7e6f9$export$a86091986009ee0c","$ceb8444dd004ab8a$export$8cf654b375a16d2d","hoverable","$81ab47502c469f14$export$4ff9f55b560a7a19","defaultTitle","activeElement","handleSave","blur","$72cef0307ec03858$export$eb632d643458470b","chatHistory","messageInput","sendButton","abortButton","$570bf9ace8bdf9d6$export$55b289eb1b395f0c","chatForm","editChatButton","chatModel","scrollToTopButton","scrollToEndButton","deleteChatButton","exportChatButton","createMessageDiv","scrollToEnd","scrollToTop","handleEditChat","handleDeleteChat","currentMessage","event1","next","previous","nextElementSibling","previousElementSibling","lastElementChild","messageClone","messageDiv","textSpan","deleteButton","copyButton","goodButton","badButton","flagButton","quality","spellcheck","dataset","textElement","stopPropagation","scrollTop","scrollHeight","$8e0651281df4c7fc$export$86fbec116b87613f","run","sidebar","chatArea","api","settingsDialog","chatSettingsDialog","downloadButton","newChatButton","clearButton","initializeElements","logInitialization","handleNewChat","handleClear","handleAbort","handleKeyPress","history","pushState","enableForm","shiftKey","sendMessage","disableForm","userPrompt","systemMessage","createChatMessage","responseElement","requestContext","getModelFromText","handleResponseError","handleDone","lastMatch","slice","sanitizedContent","sanitizeContent","getIdParam","location","pathname","$22b1963f49ab731e$var$initialize"],"version":3,"file":"index.34f9ac8b.js.map"}